1. 객체지향 설계 원칙 중 서브타입(상속받은 하위 클래스)은 어디에서나 자신의 기반타입(상위 클래스)으로 교체할 수 있어야 함을 의미하는 원칙은?

2. 소프트웨어를 개발하기 위한 비즈니스(업무)를 객체와 속성, 클래스와 멤버, 전체와 부분 등으로 나누어서 분석해 내는 기법은? (1-5)

3. 객체지향 기법에서 같은 클래스에 속한 각각의 객체를 의미하는 것은?

4. 입력되는 데이터를 컴퓨터의 프로세서가 처리하기 전에 미리 처리하여 프로세서가 처리하는 시간을 줄여주는 프로그램이나 하드웨어를 말하는 것은? (?)

5. UI와 관련된 기본 개념 중 하나로, 시스템의 상태와 사용자의 지시에 대한 효과를 보여주어 사용자가 명령에 대한 진행 상황과 표시된 내용을 해석할 수 있도록 도와주는 것은?

6. 객체지향 분석 기법의 하나로 객체 모형, 동적 모형, 기능 모형의 3개 모형을 생성하는 방법은?

7. 객체지향 기법에서 클래스들 사이의 ‘부분-전체(Part-Whole)’ 관계 또는 ‘부분(is-a-part-of)’의 관계로 설명되는 연관성을 나타내는 용어는?

8. 객체지향 소프트웨어 공학에서 하나 이상의 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것은?

9. 다음 내용이 설명하는 UI 설계 도구는?
• 디자인, 사용 방법 설명, 평가 등을 위해 실제 화면과 유사하게 만든 정적인 형태의 모형
• 시각적으로만 구성 요소를 배치하는 것으로 일반적으로 실제로 구현되지는 않음

10. UML 다이어그램 중 시스템 내 클래스의 정적 구조를 표현하고 클래스와 클래스, 클래스의 속성 사이의 관계를 나타내는 것은?

11. 럼바우(Rumbaugh)의 객체지향 분석 기법 중 자료 흐름도(DFD)를 주로 이용하는 것은?

12. 객체지향 기법에서 상위 클래스의 메소드와 속성을 하위 클래스가 물려받는 것을 의미하는 것은?

13. 객체지향 프로그램에서 데이터를 추상화하는 단위는?

14. UI 설계 원칙 중 누구나 쉽게 이해하고 사용할 수 있어야 한다는 원칙은?

15. 클래스 다이어그램의 요소로, 다음 설명에 해당하는 용어는?
• 클래스의 동작을 의미한다.
• 클래스에 속하는 객체에 대하여 적용될 메서드를 정의한 것이다.
• UML에서는 동작에 대한 인터페이스를 지칭한다고 볼 수 있다.

16. 럼바우(Rumbaugh) 분석 기법에서 정보 모델링이라고도 하며, 시스템에서 요구되는 객체를 찾아내어 속성과 연산 식별 및 객체들 간의 관계를 규정하여 다이어그램을 표시하는 모델링은?

17. 객체지향에서 정보 은닉과 가장 밀접한 관계가 있는 것은?

18. 객체에게 어떤 행위를 하도록 지시하는 명령은?

19. 대표적으로 DOS 및 UNIX 등의 운영체제에서 조작을 위해 사용하던 것으로, 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스(User Interface)는?

20. 기본 유스케이스 수행 시 특별한 조건을 만족할 때 수행하는 유스케이스는?

21. 속성과 관련된 연산(Operation)을 클래스 안에 묶어서 하나로 취급하는 것을 의미하는 객체지향 개념은?

22. 서브시스템이 입력 데이터를 받아 처리하고 결과를 다른 시스템에 보내는 작업이 반복되는 아키텍처 스타일은?

23. UI의 종류로 멀티 터치(Multi-touch), 동작 인식(Gesture Recognition) 등 사용자의 자연스러운 움직임을 인식하여 서로 주고받는 정보를 제공하는 사용자 인터페이스를 의미하는 것은?

24. 객체지향 분석 방법론 중 Coad-Yourdon 방법에 해당하는 것은?

25. 객체지향 개념에서 연관된 데이터와 함수를 함께 묶어 외부와 경계를 만들고 필요한 인터페이스만을 밖으로 드러내는 과정은?

26. 소프트웨어 설계 시 제일 상위에 있는 main user function에서 시작하여 기능을 하위 기능들로 분할해 가면서 설계하는 방식은?

27. 소프트웨어 설계에서 자주 발생하는 문제에 대한 일반적이고 반복적인 해결 방법을 무엇이라고 하는가?

28. 소프트웨어 개발 영역을 결정하는 요소 중 다음 사항과 관계있는 것은?
• 소프트웨어에 의해 간접적으로 제어되는 장치와 소프트웨어를 실행하는 하드웨어
• 기존의 소프트웨어와 새로운 소프트웨어를 연결하는 소프트웨어
• 순서적 연산에 의해 소프트웨어를 실행하는 절차

29. 객체지향 개념 중 하나 이상의 유사한 객체들을 묶어 공통된 특성을 표현한 데이터 추상화를 의미하는 것은?

30. 정보공학 방법론에서 데이터베이스 설계의 표현으로 사용하는 모델링 언어는?

31. 보헴이 제안한 것으로, 위험 분석 기능이 있으며, 여러 번의 개발 과정을 거쳐 점진적으로 개발하는 모형은?

32. 객체지향 분석 방법론 중 E-R 다이어그램을 사용하여 객체의 행위를 모델링하며, 객체 식별, 구조식별, 주체 정의, 속성 및 관계 정의, 서비스 정의 등의 과정으로 구성되는 것은?

33. 클래스 설계 원칙에 대한 바른 설명은?

34. 소프트웨어를 보다 쉽게 이해할 수 있고 적은 비용으로 수정할 수 있도록 겉으로 보이는 동작의 변화 없이 내부 구조를 변경하는 것은?

35. UML 모델에서 한 사물의 명세가 바뀌면 다른 사물에 영향을 주며, 일반적으로 한 클래스가 다른 클래스를 오퍼레이션의 매개 변수로 사용하는 경우에 나타나는 관계는?

36. 다음 중 자료 사전(Data Dictionary)에서 선택의 의미를 나타내는 것은?

37. 통신을 위한 프로그램을 생성하여 포트를 할당하고, 클라이언트의 통신 요청 시 클라이언트와 연결하는 내·외부 송·수신 연계기술은?

38. 코드 설계에서 일정한 일련번호를 부여하는 방식의 코드는?

39. 다음 내용이 설명하는 객체지향 설계 원칙은?
• 클라이언트는 자신이 사용하지 않는 메서드와 의존관계를 맺으면 안 된다.
• 클라이언트가 사용하지 않는 인터페이스 때문에 영향을 받아서는 안 된다.

40. 좋은 소프트웨어 설계를 위한 소프트웨어의 모듈간의 결합도(Coupling)와 모듈 내 요소 간 응집도 (Cohesion)에 대한 설명으로 옳은 것은?

41. UML 모델에서 한 객체가 다른 객체에게 오퍼레이션을 수행하도록 지정하는 의미적 관계로 옳은 것은?

42. 분산 컴퓨팅 환경에서 서로 다른 기종 간의 하드웨어나 프로토콜, 통신환경 등을 연결하여 응용 프로그램과 운영환경 간에 원만한 통신이 이루어질 수 있게 서비스를 제공하는 소프트웨어는?

43. 코드화 대상 항목의 중량, 면적, 용량 등의 물리적 수치를 이용하여 만든 코드는?

44. 다음 설명에 부합하는 용어로 옳은 것은?
• 소프트웨어 구조를 이루며, 다른 것들과 구별될 수 있는 독립적인 기능을 갖는 단위이다.
• 하나 또는 몇 개의 논리적인 기능을 수행하기 위한 명령어들의 집합이라고도 할 수 있다.
• 서로 모여 하나의 완전한 프로그램으로 만들어질 수 있다.

45. 파이프 필터 형태의 소프트웨어 아키텍처에 대한 설명으로 옳은 것은?

46. 클라이언트와 서버 간의 통신을 담당하는 시스템 소프트웨어를 무엇이라고 하는가?

47. 다음 내용이 설명하는 디자인 패턴은?
• 객체를 생성하기 위한 인터페이스를 정의하여 어떤 클래스가 인스턴스화 될 것인지는 서브클래스가 결정하도록 하는 것
• Virtual-Constructor 패턴이라고도 함

48. 컴포넌트 설계 시 “()에 의한 설계”를 따를 경우, 해당 명세에서는 이하가 포함되어야 한다.
(1) 컴포넌트의 오퍼레이션 사용 전에 참이 되어야 할 선행조건
(2) 사용 후 만족되어야 할 결과조건
(3) 오퍼레이션이 실행되는 동안 항상 만족되어야 할 불변조건 등

49. 여러 개의 선택 항목 중 하나의 선택만 가능한 경우 사용하는 사용자 인터페이스(UI) 요소는?

50. 아래의 UML 모델에서 ‘차’ 클래스와 각 클래스의 관계로 옳은 것은?

51. 다음의 설명에 해당하는 언어는? 객체지향 시스템을 개발할 때 산출물을 명세화, 시각화, 문서화하는데 사용된다. 즉, 개발하는 시스템을 이해하기 쉬운 형태로 표현하여 분석가, 의뢰인, 설계자가 효율적인 의소소통을 할 수 있게 해 준다. 따라서, 개발 방법론이나 개발 프로세스가 아니라 표준화된 모델링 언어이다.

52. 트랜잭션이 올바르게 처리되고 있는지 데이터를 감시하고 제어하는 미들웨어는?

53. 다음 설명에 해당하는 시스템으로 옳은 것은? 시스템 인터페이스를 구성하는 시스템으로, 연계할 데이터를 데이터베이스와 애플리케이션으로부터 연계 테이블 또는 파일 형태로 생성하며 송신하는 시스템이다.

54. 다음 내용이 설명하는 디자인 패턴은?
• 하나의 객체를 생성하면 생성된 객체를 어디서든 참조할 수 있지만, 여러 프로세스가 동시에 참조할 수는 없다.
• 클래스 내에서 인스턴스가 하나뿐임을 보장하며, 불필요한 메모리 낭비를 최소화 할 수 있다.

55. 명백한 역할을 가지고 독립적으로 존재할 수 있는 시스템의 부분으로 넓은 의미에서는 재사용되는 모든 단위라고 볼 수 있으며, 인터페이스를 통해서만 접근할 수 있는 것은?

56. 정렬된 N개의 데이터를 처리하는 데 O(Nlog2N)의 시간이 소요되는 정렬 알고리즘은?

57. 순서가 있는 리스트에서 데이터의 삽입(Push), 삭제(Pop)가 한 쪽 끝에서 일어나며 LIFO(Last-InFirst- Out)의 특징을 가지는 자료 구조는?

58. 소프트웨어 품질 목표 중 주어진 시간 동안 주어진 기능을 오류 없이 수행하는 정도를 나타내는 것은?

59. 럼바우(Rumbaugh) 객체지향 분석 기법에서 동적 모델링에 활용되는 다이어그램은?

60. 응용 프로그램의 프로시저를 사용하여 원격 프로시저를 로컬 프로시저처럼 호출하는 방식의 미들웨어는?

61. 검토 회의 전에 요구사항 명세서를 미리 배포하여 사전 검토한 후 짧은 검토 회의를 통해 오류를 조기에 검출하는데 목적을 두는 요구사항 검토 방법은?

62. 공통 모듈에 대한 명세 기법 중 해당 기능에 대해 일관되게 이해되고 한 가지로 해석될 수 있도록 작성하는 원칙은?

63. 인터페이스 요구사항 검토 방법에 대한 설명이 옳은 것은?
- 작성자 이외의 전문 검토 그룹이 요구사항 명세서를 상세히 조사하여 결함, 표준 위배, 문제점 등을 파악
- 요구사항 명세서 작성자가 요구사항 명세서를 설명하고 이해관계자들이 설명을 들으면서 결함을 발견
- 자동화된 요구사항 관리 도구를 이용하여 요구사항 추적성과 일관성을 검토
- 검토 자료를 회의 전에 배포해서 사전 검토한 후 짧은 시간 동안 검토 회의를 진행하면 서 결함을 발견

64. 자료 사전에서 자료의 생략을 의미하는 기호는?

65. 자료 사전에서 자료의 반복을 의미하는 것은?

66. UML 확장 모델에서 스테레오 타입 객체를 표현할 때 사용하는 기호로 맞는 것은?

67. 패키지 소프트웨어의 일반적인 제품 품질 요구사항 및 테스트를 위한 국제 표준은?

68. 소프트웨어 품질 목표 중 하나 이상의 하드웨어 환경에서 운용되기 위해 쉽게 수정될 수 있는 시스템 능력을 의미하는 것은?

69. 소프트웨어의 일부분을 다른 시스템에서 사용할 수 있는 정도를 의미하는 것은?

70. 퀵 정렬에 관한 설명으로 옳은 것은?
① 레코드의 키 값을 분석하여 같은 값끼리 그 순서에 맞는 버킷에 분배하였다가 버킷의 순서대로 레코드를 꺼내어 정렬한다.
② 주어진 파일에서 인접한 두 개의 레코드 키 값을 비교하여 그 크기에 따라 레코드 위치를 서로 교환한다.
③ 레코드의 많은 자료 이동을 없애고 하나의 파일을 부분적으로 나누어 가면서 정렬한다.
④ 임의의 레코드 키와 매개변수(h)값만큼 떨어진 곳의 레코드 키를 비교하여 서로 교환해 가면서 정렬한다.

71. 소프트웨어 프로젝트 관리에 대한 설명으로 가장 옳은 것은?
① 개발에 따른 산출물 관리
② 소요 인력은 최대화하되 정책 결정은 신속하게 처리
③ 주어진 기간은 연장하되 최소의 비용으로 시스템을 개발
④ 주어진 기간 내에 최소의 비용으로 사용자를 만족시키는 시스템을 개발

72. 다음 중 최악의 경우 검색 효율이 가장 나쁜 트리 구조는?

73. 테스트를 목적에 따라 분류했을 때, 강도(Stress) 테스트에 대한 설명으로 옳은 것은?
① 시스템에 고의로 실패를 유도하고 시스템이 정상적으로 복귀하는지 테스트한다.
② 시스템에 과다 정보량을 부과하여 과부하 시에도 시스템이 정상적으로 작동되는지를 테스트한다.
③ 사용자의 이벤트에 시스템이 응답하는 시간, 특정 시간 내에 처리하는 업무량, 사용자 요구에 시스템이 반응하는 속도 등을 테스트한다.
④ 부당하고 불법적인 침입을 시도하여 보안시스템이 불법적인 침투를 잘 막아내는지 테스트한다.



74. 소프트웨어의 개발 과정에서 소프트웨어의 변경 사항을 관리하기 위해 개발된 일련의 활동을 뜻하는 것은?

75. 인터페이스 구현 검증 도구 중 아래에서 설명하는 것은?
• 서비스 호출, 컴포넌트 재사용 등 다양한 환경을 지원하는 테스트 프레임워크
• 각 테스트 대상 분산 환경에 데몬을 사용하여 테스트 대상 프로그램을 통해 테스트를 수행하고, 통합하여 자동화하는 검증 도구

76. 분할 정복(Divide and Conquer)에 기반한 알고리즘으로 피봇(pivot)을 사용하며 최악의 경우 n(n-1) / 2회의 비교를 수행해야 하는 정렬(Sort)은?



77. 소프트웨어 품질목표 중 쉽게 배우고 사용할 수 있는 정도를 나타내는 것은?

78. 인터페이스 구현 시 사용하는 기술 중 다음 내용이 설명 하는 것은? JavaScript를 사용한 비동기 통신기술로, 클라이언트와 서버 간에 XML 데이터를 주고받는 기술

79. 알고리즘 시간 복잡도 O(1)이 의미하는 것은?

80. 하향식 통합 시험을 위해 일시적으로 필요한 조건만을 가지고 임시로 제공되는 시험용 모듈은?

81. 다음 설명의 소프트웨어 테스트의 기본 원칙은?
• 파레토 법칙이 좌우한다.
• 애플리케이션 결함의 대부분은 소수의 특정한 모듈에 집중되어 존재한다.
• 결함은 발생한 모듈에서 계속 추가로 발생할 가능성이 높다.

82. 그래프의 특수한 형태로 노드(Node)와 선분(Branch)으로 되어 있고, 정점 사이에 사이클(Cycle)이 형성되어 있지 않으며, 자료 사이의 관계성이 계층 형식으로 나타나는 비선형 구조는?

83. 소프트웨어 형상 관리의 의미로 적절한 것은?

84. 소프트웨어 테스트에서 오류의 80%는 전체 모듈의 20% 내에서 발견된다는 법칙은?

85. 해싱 함수 중 레코드 키를 여러 부분으로 나누고, 나눈 부분의 각 숫자를 더하거나 XOR한 값을 홈 주소로 사용하는 방식은?

86. 인터페이스 간의 통신을 위해 이용되는 데이터 포맷이 아닌 것은?

87. 소프트웨어 개발 활동을 수행함에 있어서 시스템이 고장(Failure)을 일으키게 하며, 오류(Error)가 있는 경우 발생하는 것은?

88. 필드 테스팅(Field Testing)이라고도 불리며 개발자 없이 고객의 사용 환경에 소프트웨어를 설치하여 검사를 수행하는 인수검사 기법은?

89. 동시에 소스를 수정하는 것을 방지하며 다른 방향으로 진행된 개발 결과를 합치거나 변경 내용을 추적할 수 있는 소프트웨어 버전 관리 도구는?

90. 저작권 관리 구성 요소 중 패키저(Packager)의 주요 역할로 옳은 것은?

91. 아주 오래되거나 참고문서 또는 개발자가 없어 유지보수 작업이 아주 어려운 프로그램을 의미하는 것은?

92. 다음이 설명하는 애플리케이션 통합 테스트 유형은?
• 깊이 우선 방식 또는 너비 우선 방식이 있다.
• 상위 컴포넌트를 테스트 하고 점증적으로 하위 컴포넌트를 테스트 한다.
• 하위 컴포넌트 개발이 완료되지 않은 경우 스텁(Stub)을 사용하기도 한다.

93. 다음 설명의 소프트웨어 버전 관리 도구 방식은?
• 버전 관리 자료가 원격 저장소와 로컬 저장소에 함께 저장되어 관리된다.
• 로컬 저장소에서 버전 관리가 가능하므로 원격 저장소에 문제가 생겨도 로컬 저장소의 자료를 이용하여 작업할 수 있다.
• 대표적인 버전 관리 도구로 Git이 있다.

94. 디지털 저작권 관리(DRM) 구성 요소가 아닌 것은?

95. 다음 설명에 해당하는 것은? 물리적 저장 장치의 입장에서 본 데이터베이스 구조로서 실제로 데이터베이스에 저장될 레코드의 형식을 정의하고 저장 데이터 항목의 표현 방법, 내부 레코드의 물리적 순서 등을 나타낸다.

96. 다음에서 설명하는 클린 코드 작성 원칙은?
• 한 번에 한 가지 처리만 수행한다.
• 클래스/메소드/함수를 최소 단위로 분리한다.

97. 테스트와 디버그의 목적으로 옳은 것은?

98. 애플리케이션의 처리량, 응답 시간, 경과 시간, 자원 사용률에 대해 가상의 사용자를 생성하고 테스트를 수행함으로써 성능 목표를 달성하였는지를 확인하는 테스트 자동화 도구는?

99. 버전 관리 항목 중 저장소에 새로운 버전의 파일로 갱신하는 것을 의미하는 용어는?

100. 알파, 베타 테스트와 가장 밀접한 연관이 있는 테스트 단계는?

101. 데이터베이스에서 하나의 논리적 기능을 수행하기 위한 작업의 단위 또는 한꺼번에 모두 수행되어야할 일련의 연산들을 의미하는 것은?

102. 단위 테스트에서 테스트의 대상이 되는 하위 모듈을 호출하고, 파라미터를 전달하는 가상의 모듈로 상향식 테스트에 필요한 것은?

103. 검증 검사 기법 중 개발자의 장소에서 사용자가 개발자 앞에서 행하는 기법이며, 일반적으로 통제된 환경에서 사용자와 개발자가 함께 확인하면서 수행되는 검사는?

104. 다음이 설명하는 테스트 용어는?
• 테스트의 결과가 참인지 거짓인지를 판단하기 위해서 사전에 정의된 참값을 입력하여 비교하는 기법 및 활동을 말한다.
• 종류에는 참, 샘플링, 휴리스틱, 일관성 검사가 존재한다.

105. 프로젝트에 내재된 위험 요소를 인식하고 그 영향을 분석하여 이를 관리하는 활동으로서, 프로젝트를 성공시키기 위하여 위험 요소를 사전에 예측, 대비하는 모든 기술과 활동을 포함하는 것은?

106. 관계 데이터 모델에서 릴레이션(Relation)에 포함되어 있는 튜플(Tuple)의 수를 무엇이라고 하는가?

107. 개별 모듈을 시험하는 것으로, 모듈이 정확하게 구현되었는지, 예정한 기능이 제대로 수행되는지를 점검하는 것이 주목적인 테스트는?

108. 위험 모니터링의 의미로 옳은 것은?

109. 트랜잭션의 상태 중 트랜잭션의 수행이 실패하여 Rollback 연산을 실행한 상태는?

110. 다음과 같이 위쪽 릴레이션을 아래쪽 릴레이션으로 정규화를 하였을 때 어떤 정규화 작업을 한 것인가?

111. 릴레이션 조작 시 데이터들이 불필요하게 중복되어 예기치 않게 발생하는 곤란한 현상을 의미하는 것은?

112. 다른 릴레이션의 기본키를 참조하는 키를 의미하는 것은?

113. 데이터베이스에는 관계형, 계층형, 네트워크형 등 다양한 종류가 있는데 이들을 구분하는 기준은?

114. 데이터베이스의 트랜잭션 성질들 중에서 다음 설명에 해당하는 것은? 트랜잭션의 모든 연산들이 정상적으로 수행 완료되거나 아니면 전혀 어떠한 연산도 수행되지 않은 원래 상태가 되도록 해야 한다.

115. 어떤 릴레이션 R에서 X와 Y를 각각 R의 애트리뷰트 집합의 부분 집합이라고 할 경우 애트리뷰트 X 의 값 각각에 대해 시간에 관계없이 항상 애트리뷰트 Y의 값이 오직 하나만 연관되어 있을 때 Y는 X에 함수 종속이라고 한다. 이 함수 종속의 표기로 옳은 것은?

116. 관계해석에서 ‘모든 것에 대하여’의 의미를 나타내는 논리 기호는?

117. 관계형 데이터베이스에서 다음 설명에 해당하는 키(Key)는? 한 릴레이션 내의 속성들의 집합으로 구성된 키로서, 릴레이션을 구성하는 모든 튜플에 대한 유일성은 만족시키지만 최소성은 만족시키지 못한다.

118. 데이터 모델의 구성 요소 중 데이터 구조에 따라 개념 세계나 컴퓨터 세계에서 실제로 표현된 값들을 처리하는 작업을 의미하는 것은?

119. 트랜잭션의 상태 중 트랜잭션의 마지막 연산이 실행된 직후의 상태로, 모든 연산의 처리는 끝났지만, 트랜잭션이 수행한 최종 결과를 데이터베이스에 반영하지 않은 상태는?

120. 이전 단계의 정규형을 만족하면서 후보키를 통하지 않는 조인 종속(JD; Join Dependency)을 제거해야 만족하는 정규형은?

121. 관계대수 연산에서 두 릴레이션이 공통으로 가지고 있는 속성을 이용하여 두 개의 릴레이션을 하나로 합쳐서 새로운 릴레이션을 만드는 연산은?

122. 다음 설명의 ( ) 안에 들어갈 내용으로 적합한 것은? 후보키는 릴레이션에 있는 모든 튜플에 대해 유일성과 ()을 모두 만족시켜야 한다.

123. 다음에서 설명하는 스키마(Schema)는? 데이터베이스 전체를 정의한 것으로 데이터 개체, 관계, 제약조건, 접근권한, 무결성 규칙 등을 명세한 것

124. 물리적 데이터베이스를 설계하는 전 단계로서, 데이터 모델링이라 불리는 데이터베이스 설계 단계는?

125. 정규화된 엔티티, 속성, 관계를 시스템의 성능 향상과 개발 운영의 단순화를 위해 중복, 통합, 분리 등을 수행하는 데이터 모델링 기법은?

126. 정규화 과정 중 1NF에서 2NF가 되기 위한 조건은?

127. 데이터베이스 설계 단계 중 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계, 접근 경로 설계와 관계되는 것은?

128. 조건을 만족하는 릴레이션의 수평적 부분집합으로 구성하며, 연산자의 기호는 그리스 문자 시그마(σ) 를 사용하는 관계대수 연산은?

129. 키의 종류 중 유일성과 최소성을 만족하는 속성 또는 속성들의 집합은?

130. 관계 데이터 모델의 무결성 제약 중 기본키 값의 속성 값이 널(Null) 값이 아닌 원자 값을 갖는 성질은?

131. 하나의 애트리뷰트가 가질 수 있는 원자값들의 집합을 의미하는 것은?

132. 다음 조건을 모두 만족하는 정규형은?
• 테이블 R에 속한 모든 도메인이 원자값만으로 구성되어 있다.
• 테이블 R에서 키가 아닌 모든 필드가 키에 대해 함수적으로 종속되며, 키의 부분집합이 결정자가 되는 부분 종속이 존재하지 않는다.
• 테이블 R에 존재하는 모든 함수적 종속에서 결정자가 후보키이다.

133. 관계 데이터베이스 모델에서 차수(Degree)의 의미는?

134. 이행적 함수 종속 관계를 의미하는 것은?

135. 릴레이션 R1에 속한 애튜리뷰트의 조합인 외래키를 변경하려면 이를 참조하고 있는 릴레이션 R2의 기본키도 변경해야 하는데 이를 무엇이라 하는가?

136. 동시성 제어를 위한 직렬화 기법으로, 트랜잭션 간의 처리 순서를 미리 정하는 방법은?

137. SQL에서 VIEW를 삭제할 때 사용하는 명령은?

138. 트랜잭션의 실행이 실패하였음을 알리는 연산자로, 트랜잭션이 수행한 결과를 원래의 상태로 원상 복귀시키는 연산은?

139. 분산 데이터베이스 목표 중 “데이터베이스의 분산된 물리적 환경에서 특정 지역의 컴퓨터 시스템이나 네트워크에 장애가 발생해도 데이터 무결성이 보장된다.”는 것과 관계있는 것은?

140. 다음과 같은 트랙잭션의 특성은? 시스템이 가지고 있는 고정요소는 트랜잭션 수행 전과 트랜잭션 수행 완료 후의 상태가 같아야 한다.

141. 데이터베이스 시스템에서 삽입, 갱신, 삭제 등의 이벤트가 발생할 때마다 관련 작업이 자동으로 수행되는 절차형 SQL은?

142. SQL의 기능에 따른 분류 중에서 REVOKE문과 같이 데이터의 사용 권한을 관리하는 데 사용하는 언어는?

143. SQL에서 스키마(Schema), 도메인(Domain), 테이블(Table), 뷰(View), 인덱스(Index)를 정의하거나 변경 또는 삭제할 때 사용하는 언어는?

144. 트랜잭션의 주요 특성 중 하나로, 둘 이상의 트랜잭션이 동시에 병행 실행되는 경우 어느 하나의 트랜잭션 실행 중에 다른 트랜잭션의 연산이 끼어들 수 없음을 의미하는 것은?

145. 데이터베이스 로그(log)를 필요로 하는 회복 기법은?

146. 정보시스템과 관련한 다음 설명에 해당하는 것은?
• 각 시스템 간에 공유 디스크를 중심으로 클러스터링으로 엮어 다수의 시스템을 동시에 연결할 수 있다.
• 조직, 기업의 기간 업무 서버 안정성을 높이기 위해 사용될 수 있다.
• 여러 가지 방식으로 구현되며 2개의 서버를 연결하는 것으로 2개의 시스템이 각각 업무를 수행하도록 구현하는 방식이 널리 사용된다.

147. 참조 무결성을 유지하기 위하여 DROP문에서 부모 테이블의 항목 값을 삭제할 경우 자동적으로 자식 테이블의 해당 레코드를 삭제하기 위한 옵션은?

148. 파티셔닝 방식 중 ‘월별, 분기별’과 같이 지정한 열의 값을 기준으로 범위를 지정하여 분할하는 방식은?

149. 트랙잭션을 수행하는 도중 장애로 인해 손상된 데이터베이스를 손상되기 이전에 정상적인 상태로 복구시키는 작업은?

150. SQL문에서 HAVING을 사용할 수 있는 절은?

151. ‘회원’ 테이블 생성 후 ‘주소’ 필드(컬럼)가 누락되어 이를 추가하려고 한다. 이에 적합한 SQL 명령어는?

152. 데이터베이스에 영향을 주는 생성, 읽기, 갱신, 삭제 연산으로 프로세스와 테이블 간에 매트릭스를 만들어서 트랜잭션을 분석하는 것은?

153. DDL(Data Define Language)의 명령어 중 스키마, 도메인, 인덱스 등을 정의할 때 사용하는 SQL문은?

154. 데이터베이스 성능에 많은 영향을 주는 DBMS의 구성 요소로 테이블과 클러스터에 연관되어 독립적인 저장 공간을 보유하며, 데이터베이스에 저장된 자료를 더욱 빠르게 조회하기 위하여 사용되는 것은?

155. 다음 설명에 해당하는 내용은 무엇인가? 프로세스 처리 도중, 참조할 페이지가 주기억장치에 없어 프로세스 처리시간보다, 페이지 교체에 소요되는 시간이 더 많아지는 현상

156. C언어에서 문자열을 정수형으로 변환하는 라이브러리 함수는?

157. 다음이 설명하는 응집도의 유형은? 모듈이 다수의 관련 기능을 가질 때 모듈안의 구성 요소들이 그 기능을 순차적으로 수행할 경우의 응집도

158. 교착상태의 해결 방법 중 은행원 알고리즘(Banker's Algorithm)이 해당되는 기법은?

159. TCP/IP에서 사용되는 논리(IP) 주소를 물리(MAC) 주소로 변환시켜 주는 프로토콜은?

160. UNIX에서 새로운 프로세스를 생성하는 명령어는?

161. 귀도 반 로섬(Guido van Rossum)이 발표한 언어로 인터프리터 방식이자 객체지향적이며, 배우기 쉽고 이식성이 좋은 것이 특징인 스크립트 언어는?

162. 응집도의 종류 중 서로 간에 어떠한 의미 있는 연관 관계도 지니지 않은 기능 요소로 구성되는 경우이며, 서로 다른 상위 모듈에 의해 호출되어 처리상의 연관성이 없는 서로 다른 기능을 수행하는 경우의 응집도는?

163. TCP 흐름 제어 기법 중 프레임이 손실되었을 때, 손실된 프레임 1개를 전송하고 수신자의 응답을 기다리는 방식으로 한 번에 프레임 1개만 전송할 수 있는 기법은?

164. TCP/IP 프로토콜에서 TCP가 해당하는 계층은?

165. 운영체제의 가상기억장치 관리에서 프로세스가 일정 시간동안 자주 참조하는 페이지들의 집합을 의미하는 것은?

166. C언어에서 두 개의 논리값 중 하나라도 참이면 1을, 모두 거짓이면 0을 반환하는 연산자는?

167. 모듈 내 구성 요소들이 서로 다른 기능을 같은 시간대에 함께 실행하는 경우의 응집도(Cohesion)는?

168. IEEE 802.11 워킹 그룹의 무선 LAN 표준화 현황 중 QoS 강화를 위해 MAC 지원 기능을 채택한 것은?

169. OSI 7계층 중 다음 설명에 해당하는 계층은?
• 두 응용 프로세스 간의 통신에 대한 제어 구조를 제공한다.
• 연결의 생성, 관리, 종료를 위해 토큰을 사용한다.

170. JAVA에서 힙(Heap)에 남아있으나 변수가 가지고 있던 참조값을 잃거나 변수 자체가 없어짐으로써 더 이상 사용되지 않는 객체를 제거해주는 역할을 하는 모듈은?

171. Java 프로그래밍 언어의 정수 데이터 타입 중 ‘long’의 크기는?

172. 어떤 모듈이 다른 모듈의 내부 논리 조직을 제어하기 위한 목적으로 제어신호를 이용하여 통신하는 경우이며, 하위 모듈에서 상위 모듈로 제어신호가 이동하여 상위 모듈에게 처리 명령을 부여하는 권리 전도현상이 발생하게 되는 결합도는?

173. 다음 설명에 해당하는 방식은?
• 무선 랜에서 데이터 전송 시, 매체가 비어있음을 확인한 뒤 충돌을 회피하기 위해 임의 시간을 기다린 후 데이터를 전송하는 방법이다.
• 네트워크에 데이터의 전송이 없는 경우라도 동시 전송에 의한 충돌에 대비하여 확인 신호를 전송한다.

174. OSI 7계층에서 단말기 사이에 오류 수정과 흐름 제어를 수행하여 신뢰성 있고 명확한 데이터를 전달하는 계층은?

175. Python 데이터 타입 중 시퀀스(Sequence) 데이터 타입에 해당하며 다양한 데이터 타입들을 주어진 순서에 따라 저장할 수 있으나 저장된 내용을 변경할 수 없는 것은?

176. 한 모듈이 다른 모듈의 내부 기능 및 그 내부 자료를 참조하는 경우의 결합도는?

177. IEEE 802.3 LAN에서 사용되는 전송 매체 접속 제어(MAC) 방식은?

178. OSI 7계층에서 물리적 연결을 이용해 신뢰성 있는 정보를 전송하려고 동기화, 오류 제어, 흐름 제어 등의 전송 에러를 제어하는 계층은?

179. 다음 설명의 ㉠과 ㉡에 들어갈 내용으로 옳은 것은? 가상기억장치의 일반적인 구현 방법에는 프로그램을 고정된 크기의 일정한 블록으로 나누는 () 기법과 가변적인 크기의 블록으로 나누는 ( ) 기법이 있다.

180. C언어에서 구조체를 사용하여 데이터를 처리할 때 사용하는 것은?

181. 다음 내용이 설명하는 소프트웨어 취약점은? 메모리를 다루는 데 오류가 발생하여 잘못된 동작을 하는 프로그램 취약점

182. C언어 라이브러리 중 stdlib.h에 대한 설명으로 옳은 것은?

183. TCP/IP 계층 구조에서 IP의 동작 과정에서의 전송 오류가 발생하는 경우에 대비해 오류 정보를 전송하는 목적으로 사용하는 프로토콜은?

184. 다음에서 설명하는 프로세스 스케줄링은? 최소 작업 우선(SJF) 기법의 약점을 보완한 비선점 스케줄링 기법으로 다음과 같은 식을 이용해 우선 순위를 판별한다. 우선순위 = (대기한 시간 + 서비스를 받을 시간) / 서비스를 받을 시간

185. C언어에서 정수 자료형으로 옳은 것은?

186. 기존 무선 랜의 한계 극복을 위해 등장하였으며, 대규모 디바이스의 네트워크 생성에 최적화되어 차세대 이동통신, 홈 네트워킹, 공공 안전 등의 특수 목적에 사용되는 새로운 방식의 네트워크 기술을 의미하는 것은?

187. Putnam 모형을 기초로 해서 만든 자동화 추정 도구는?

188. 정형화된 분석 절차에 따라 사용자 요구사항을 파악, 문서화하는 체계적 분석방법으로 자료 흐름도, 자료 사전, 소단위 명세서의 특징을 갖는 것은?

189. 접근 통제 방법 중 조직 내에서 직무, 직책 등 개인의 역할에 따라 결정하여 부여하는 접근 정책은?

190. 크래커가 침입하여 백도어를 만들어 놓거나, 설정 파일을 변경했을 때 분석하는 도구는?

191. 여러 개의 독립된 통신장치가 UWB(Ultra Wide Band) 기술 또는 블루투스 기술을 사용하여 통신망을 형성하는 무선 네트워크 기술은?

192. Cocomo Model 중 기관 내부에서 개발된 중소규모의 소프트웨어로, 일괄 자료 처리나 과학 기술 계산용, 비즈니스 자료 처리용으로 5만 라인 이하의 소프트웨어를 개발하는 유형은?

193. 다음 내용이 설명하는 것은?
• 사물 통신, 사물 인터넷과 같이 대역폭이 제한된 통신환경에 최적화하여 개발된 푸시기술 기반의 경량 메시지 전송 프로토콜
• 메시지 매개자(Broker)를 통해 송신자가 특정 메시지를 발행하고 수신자가 메시지를 구독하는 방식
• IBM이 주도하여 개발

194. 다음과 같은 형태로 임계 구역의 접근을 제어하는 상호 배제 기법은?
P(S) : while S <= 0 do skip;
S := S - 1;
V(S) : S := S + 1;

195. 다음에서 설명하는 IT 기술은?
• 네트워크를 제어부, 데이터 전달부로 분리하여 네트워크 관리자가 보다 효율적으로 네트워크를 제어, 관리할 수 있는 기술
• 기존의 라우터, 스위치 등과 같이 하드웨어에 의존하는 네트워크 체계에서 안정성, 속도, 보안 등을 소프트웨어로 제어, 관리하기 위해 개발됨
• 네트워크 장비의 펌웨어 업그레이드를 통해 사용자의 직접적인 데이터 전송 경로 관리가 가능하고, 기존 네트워크에는 영향을 주지 않으면서 특정 서비스의 전송 경로 수정을 통하여 인터넷상에서 발생하는 문제를 처리할 수 있음

196. Rayleigh-Norden 곡선의 노력 분포도를 이용한 프로젝트 비용 산정기법은?

197. 서로 다른 네트워크 대역에 있는 호스트들 상호간에 통신할 수 있도록 해주는 네트워크 장비는?

198. 다음은 정보의 접근통제 정책에 대한 설명이다. (ㄱ)에 들어갈 내용으로 옳은 것은?

199. 웹과 컴퓨터 프로그램에서 용량이 적은 데이터를 교환하기 위해 데이터 객체를 속성·값의 쌍 형태로 표현하는 형식으로, 자바 스크립트(Java Script)를 토대로 개발된 형식은?

200. 다음 설명에 해당하는 소프트웨어는?
• 개발해야 할 애플리케이션의 일부분이 이미 내장된 클래스 라이브러리로 구현이 되어 있다.
• 따라서, 그 기반이 되는 이미 존재하는 부분을 확장 및 이용하는 것으로 볼 수 있다.
• JAVA 기반의 대표적인 소프트웨어로는 스프링(Spring)이 있다.

201. S/W 각 기능의 원시 코드 라인수의 비관치, 낙관치, 기대치를 측정하여 예측치를 구하고 이를 이용하여 비용을 산정하는 기법은?

202. 다음 내용이 설명하는 것은?
• 네트워크상에 광채널 스위치의 이점인 고속 전송과 장거리 연결 및 멀티 프로토콜 기능을 활용
• 각기 다른 운영체제를 가진 여러 기종들이 네트워크상에서 동일 저장장치의 데이터를 공유하게 함으로써, 여러 개의 저장장치나 백업 장비를 단일화시킨 시스템

203. 다음 내용이 설명하는 접근 제어 모델은?
• 군대의 보안 레벨처럼 정보의 기밀성에 따라 상하 관계가 구분된 정보를 보호하기 위해 사용한다.
• 자신의 권한보다 낮은 보안 레벨 권한을 가진 경우에는 높은 보안 레벨의 문서를 읽을 수 없고 자신의 권한보다 낮은 수준의 문서만 읽을 수 있다.
• 자신의 권한보다 높은 보안 레벨의 문서에는 쓰기가 가능하지만, 보안 레벨이 낮은 문서의 쓰기 권한은 제한한다.

204. SoftTech사에서 개발된 것으로 구조적 요구 분석을 하기 위해 블록 다이어그램을 채택한 자동화 도구는?

205. 소프트웨어 개발 표준 중 소프트웨어 품질 및 생산성 향상을 위해 소프트웨어 프로세스를 평가 및 개선하는 국제 표준은?

206. 소프트웨어 재공학의 주요 활동 중 기존 소프트웨어를 다른 운영체제나 하드웨어 환경에서 사용할 수 있도록 변환하는 것은?

207. 다음 내용이 설명하는 스토리지 시스템은?
• 하드디스크와 같은 데이터 저장장치를 호스트버스 어댑터에 직접 연결하는 방식
• 저장장치와 호스트 기기 사이에 네트워크 디바이스 없이 직접 연결하는 방식으로 구성

208. 정보 시스템 내에서 어떤 주체가 특정 개체에 접근하려 할 때 양쪽의 보안 레이블(Security Label)에 기초하여 높은 보안 수준을 요구하는 정보(객체)가 낮은 보안 수준의 주체에게 노출되지 않도록 하는 접근제어 방법은?

209. 프로토타입을 지속적으로 발전시켜 최종 소프트웨어 개발까지 이르는 개발방법으로, 위험관리가 중심인 소프트웨어 생명주기 모형은?

210. 전자 칩과 같은 소프트웨어 부품, 즉 블록(모듈)을 만들어서 끼워 맞추는 방법으로 소프트웨어를 완성시키는 재사용 방법은?

211. 서버에 열린 포트 정보를 스캐닝해서 보안 취약점을 찾는데 사용하는 도구는?

212. 생명 주기 모형 중 가장 오래된 모형으로, 많은 적용 사례가 있지만 요구사항의 변경이 어렵고 각 단계의 결과가 확인되어야 다음 단계로 넘어갈 수 있는 선형 순차적, 고전적 생명 주기 모형이라고도 하는 것은?

213. 실무적으로 검증된 개발보안 방법론 중 하나로, SW보안의 모범 사례를 SDLC(Software Development Life Cycle)에 통합한 소프트웨어 개발 보안 생명주기 방법론은?

214. PC, TV, 휴대폰에서 원하는 콘텐츠를 끊김없이 자유롭게 이용할 수 있는 서비스는?

215. 다음 내용이 설명하는 것은?
• 블록체인(Blockchain) 개발 환경을 클라우드로 서비스하는 개념
• 블록체인 네트워크에 노드의 추가 및 제거가 용이
• 블록체인의 기본 인프라를 추상화하여 블록체인 응용 프로그램을 만들 수 있는 클라우드 컴퓨팅 플랫폼

216. 최대 홉수를 15로 제한한 라우팅 프로토콜은?

217. 다음 내용에 적합한 용어는?
• 대용량 데이터를 분산 처리하기 위한 목적으로 개발된 프로그래밍 모델이다.
• Google에 의해 고안된 기술로써 대표적인 대용량 데이터 처리를 위한 병렬 처리 기법을 제공한다.
• 임의의 순서로 정렬된 데이터를 분산 처리하고 이를 다시 합치는 과정을 거친다.

218. 오픈소스 웹 애플리케이션 보안 프로젝트로서 주로 웹을 통한 정보 유출, 악성 파일 및 스크립트, 보안 취약점 등을 연구하는 곳은?

219. 물리적인 사물과 컴퓨터에 동일하게 표현되는 가상의 모델로, 실제 물리적인 자산 대신 소프트웨어로 가상화함으로써 실제 자산의 특성에 대한 정확한 정보를 얻을 수 있고, 자산 최적화, 돌발 사고 최소화, 생산성 향상 등 설계부터 제조, 서비스에 이르는 모든 과정의 효율성을 향상시킬 수 있는 모델은?

220. 브리지와 구내 정보 통신망(LAN)으로 구성된 통신망에서 루프(폐회로)를 형성하지 않으면서 연결을 설정하는 알고리즘은?

221. 다음이 설명하는 다중화 기술은?
• 광섬유를 이용한 통신기술의 하나를 의미함
• 파장이 서로 다른 복수의 광신호를 동시에 이용하는 것으로 광섬유를 다중화 하는 방식임
• 빛의 파장 축과 파장이 다른 광선은 서로 간섭을 일으키지 않는 성질을 이용함

222. Wi-Fi에서 제정한 무선 랜(WLAN) 인증 및 암호화 관련 표준은?

223. 시스템이 몇 대가 되어도 하나의 시스템에서 인증에 성공하면 다른 시스템에 대한 접근 권한도 얻는 시스템을 의미하는 것은?

224. 하둡(Hadoop)과 관계형 데이터베이스 간에 데이터를 전송할 수 있도록 설계된 도구는?

225. 어떤 외부 컴퓨터가 접속되면 접속 인가 여부를 점검해서 인가된 경우에는 접속이 허용되고, 그 반대의 경우에는 거부할 수 있는 접근제어 유틸리티는?

226. 다음이 설명하는 IT 기술은?
• 컨테이너 응용 프로그램의 배포를 자동화하는 오픈소스 엔진이다.
• 소프트웨어 컨테이너 안에 응용 프로그램들을 배치시키는 일을 자동화해 주는 오픈 소스 프로젝트이자 소프트웨어로 볼 수 있다.

227. 물리적 배치와 상관없이 논리적으로 LAN을 구성하여 Broadcast Domain을 구분할 수 있게 해주는 기술로, 접속된 장비들의 성능 향상 및 보안성 증대 효과가 있는 것은?

228. 기기를 키오스크에 갖다 대면 원하는 데이터를 바로 가져올 수 있는 기술로 10㎝ 이내 근접 거리에서 기가급 속도로 데이터 전송이 가능한 초고속 근접무선통신(NFC; Near Field Communication) 기술은?

229. 다음이 설명하는 용어로 옳은 것은?
• 오픈 소스를 기반으로 한 분산 컴퓨팅 플랫폼이다.
• 일반 PC급 컴퓨터들로 가상화된 대형 스토리지를 형성한다.
• 다양한 소스를 통해 생성된 빅데이터를 효율적으로 저장하고 처리한다.

230. OSI 7 Layer 전 계층의 프로토콜과 패킷 내부의 콘텐츠를 파악하여 침입 시도, 해킹 등을 탐지하고 트래픽을 조정하기 위한 패킷 분석 기술은?

231. 다음 빈칸에 들어갈 알맞은 기술은? ( )은/는 웹에서 제공하는 정보 및 서비스를 이용하여 새로운 소프트웨어나 서비스, 데이터베이스 등을 만드는 기술이다.

232. 다음 LAN의 네트워크 토폴로지는?

233. 국내 IT 서비스 경쟁력 강화를 목표로 개발되었으며 인프라 제어 및 관리 환경, 실행 환경, 개발 환경, 서비스 환경, 운영 환경으로 구성되어 있는 개방형 클라우드 컴퓨팅 플랫폼은?

234. 빅데이터 분석 기술 중 대량의 데이터를 분석하여 데이터 속에 내재되어 있는 변수 사이의 상호관계를 규명하여 일정한 패턴을 찾아내는 기법은?

235. 다음 설명에 해당하는 시스템은?
• 1990년대 David Clock이 처음 제안하였다.
• 비정상적인 접근의 탐지를 위해 의도적으로 설치해 둔 시스템이다.
• 침입자를 속여 실제 공격당하는 것처럼 보여줌으로써 크래커를 추적 및 공격기법의 정보를 수집하는 역할을 한다.
• 쉽게 공격자에게 노출되어야 하며 쉽게 공격이 가능한 것처럼 취약해 보여야 한다.

236. Python 기반의 웹 크롤링(Web Crawling) 프레임워크로 옳은 것은?

237. 전기 및 정보통신기술을 활용하여 전력망을 지능화, 고도화함으로써 고품질의 전력서비스를 제공하고 에너지 이용 효율을 극대화하는 전력망은?

238. 다음에서 설명하는 IT 스토리지 기술은?
• 가상화를 적용하여 필요한 공간만큼 나눠 사용할 수 있도록 하며 서버 가상화와 유사함
• 컴퓨팅 소프트웨어로 규정하는 데이터 스토리지 체계이며, 일정 조직 내 여러 스토리지를 하나처럼 관리하고 운용하는 컴퓨터 이용 환경
• 스토리지 자원을 효율적으로 나누어 쓰는 방법으로 이해할 수 있음

239. 컴퓨터 운영체제의 커널에 보안 기능을 추가한 것으로 운영체제의 보안상 결함으로 인하여 발생 가능한 각종 해킹으로부터 시스템을 보호하기 위하여 사용되는 것은?

240. 구글의 구글 브레인 팀이 제작하여 공개한 기계 학습(Machine Leaming)을 위한 오픈소스 소프트웨어 라이브러리는?

241. 침입 차단 시스템(방화벽) 중 다음과 같은 형태의 구축 유형은?

242. 코드의 기입 과정에서 원래 ‘12536’으로 기입되어야 하는데 ‘12936’으로 표기되었을 경우, 어떤 코드 오류에 해당하는가?

243. 다음 내용이 설명하는 것은? 개인과 기업, 국가적으로 큰 위협이 되고 있는 주요 사이버 범죄 중 하나로, Snake, Darkside 등 시스템을 잠그거나 데이터를 암호화해 사용할 수 없도록 하고 이를 인질로 금전을 요구하는 데 사용되는 악성 프로그램

244. 소셜 네트워크에서 악의적인 사용자가 지인 또는 특정 유명인으로 가장하여 활동하는 공격 기법은?

245. 비대칭 암호화 방식으로 소수를 활용한 암호화 알고리즘은?

246. 웹페이지에 악의적인 스크립트를 포함시켜 사용자 측에서 실행되게 유도함으로써, 정보유출 등의 공격을 유발할 수 있는 취약점은?

247. 이용자가 인터넷과 같은 공중망에 사설망을 구축하여 마치 전용망을 사용하는 효과를 가지는 보안 솔루션은?

248. 시스템의 사용자가 로그인하여 명령을 내리는 과정에 대한 시스템의 동작 중 다음 설명에 해당하는 것은?
• 자신의 신원(Identity)을 시스템에 증명하는 과정이다.
• 아이디와 패스워드를 입력하는 과정이 가장 일반적인 예시라고 볼 수 있다.

249. 다음 설명에 해당하는 암호화 알고리즘은?
• DES의 보안 문제를 해결하기 위해 개발되었다.
• NIST에서 개발한 개인키 암호화 알고리즘이다.

250. 시스템 내의 정보는 오직 인가된 사용자만 수정할 수 있는 보안 요소는?

251. 다음 내용이 설명하는 로그 파일은?
• 리눅스 시스템에서 사용자의 성공한 로그인/로그아웃 정보기록
• 시스템의 종료/시작 시간 기록

252. 메모리상에서 프로그램의 복귀 주소와 변수 사이에 특정 값을 저장해 두었다가 그 값이 변경되었을 경우 오버플로우 상태로 가정하여 프로그램 실행을 중단하는 기술은?

253. 위조된 매체 접근 제어(MAC) 주소를 지속적으로 네트워크로 흘려보내, 스위치 MAC 주소 테이블의 저장 기능을 혼란시켜 더미 허브(Dummy Hub)처럼 작동하게 하는 공격은?

254. 다음 설명에 해당하는 공격 기법은? 시스템 공격 기법 중 하나로 허용 범위 이상의 ICMP 패킷을 전송하여 대상 시스템의 네트워크를 마비시킨다.

255. 시스템에 저장되는 패스워드들은 Hash 또는 암호화 알고리즘의 결과 값으로 저장된다. 이때 암호 공격을 막기 위해 똑같은 패스워드들이 다른 암호 값으로 저장되도록 추가되는 값을 의미하는 것은?

256. 컴퓨터 사용자의 키보드 움직임을 탐지해 ID, 패스워드 등 개인의 중요한 정보를 몰래 빼가는 해킹 공격은?

257. IP 또는 ICMP의 특성을 악용하여 특정 사이트에 집중적으로 데이터를 보내 네트워크 또는 시스템의 상태를 불능으로 만드는 공격 방법은?

258. 악성코드의 유형 중 다른 컴퓨터의 취약점을 이용하여 스스로 전파하거나 메일로 전파되며 스스로를 증식하는 것은?

259. 특정 사이트에 매우 많은 ICMP Echo를 보내면, 이에 대한 응답(Respond)을 하기 위해 시스템 자원을 모두 사용해버려 시스템이 정상적으로 동작하지 못하도록 하는 공격 방법은?



1. 소프트웨어 공학의 기본 원칙이라고 볼 수 없는 것은?
① 품질 높은 소프트웨어 상품 개발
② 지속적인 검증 시행
③ 결과에 대한 명확한 기록 유지
④ 최대한 많은 인력 투입

2. 시스템의 구성 요소로 볼 수 없는 것은?
① Process
② Feedback
③ Maintenance
④ Control

3. 요구사항 정의 및 분석·설계의 결과물을 표현하기 위한 모델링 과정에서 사용되는 다이어그램(Diagram)
이 아닌 것은?
① Data Flow Diagram
② UML Diagram
③ E-R Diagram
④ AVL Diagram

5. GoF(Gang of Four) 디자인 패턴을 생성, 구조, 행동 패턴의 세 그룹으로 분류할 때, 구조 패턴이 아닌
것은?
① Adapter 패턴
② Bridge 패턴
③ Builder 패턴
④ Proxy 패턴

6. 객체 지향 소프트웨어 설계 시 디자인 패턴을 구성하는 요소로서 가장 거리가 먼 것은?
① 개발자 이름
② 문제 및 배경
③ 사례
④ 샘플 코드

8. UML에서 시퀀스 다이어그램의 구성 항목에 해당하지 않는 것은?
① 생명선
② 실행
③ 확장
④ 메시지

9. 디자인 패턴 중에서 행위적 패턴에 속하지 않는 것은?
① 커맨드(Command) 패턴
② 옵저버(Observer) 패턴
③ 프로토타입(Prototype) 패턴
④ 상태(State) 패턴

11. 소프트웨어 품질 측정을 위해 개발자 관점에서 고려해야 할 항목으로 거리가 먼 것은?
① 정확성
② 무결성
③ 사용성
④ 간결성

13. UML 모델에서 사용하는 Structural Diagram에 속하지 않은 것은?
① Class Diagram
② Object Diagram
③ Component Diagram
④ Activity Diagram

14. UML에서 활용되는 다이어그램 중, 시스템의 동작을 표현하는 행위(Behavioral) 다이어그램에 해당하
지 않는 것은?
① 유스케이스 다이어그램(Use Case Diagram)
② 시퀀스 다이어그램(Sequence Diagram)
③ 활동 다이어그램(Activity Diagram)
④ 배치 다이어그램(Deployment Diagram)

16. 애자일 방법론에 해당하지 않는 것은?
① 기능 중심 개발
② 스크럼
③ 익스트림 프로그래밍
④ 모듈 중심 개발

17. 다음 중 상위 CASE 도구가 지원하는 주요 기능으로 볼 수 없는 것은?
① 모델들 사이의 모순 검사 기능
② 전체 소스 코드 생성 기능
③ 모델의 오류 검증 기능
④ 자료 흐름도 작성 기능

18. 소프트웨어 아키텍처 설계에서 시스템 품질 속성이 아닌 것은?
① 가용성(Availability)
② 독립성(Isolation)
③ 변경 용이성(Modifiability)
④ 사용성(Usability)

20. CASE가 갖고 있는 주요 기능이 아닌 것은?
① 그래픽 지원
② 소프트웨어 생명 주기 전 단계의 연결
③ 언어 번역
④ 다양한 소프트웨어 개발 모형 지원

21. XP(eXtreme Programming)의 기본 원리로 볼 수 없는 것은?
① Linear Sequential Method
② Pair Programming
③ Collective Ownership
④ Continuous Integration

23. 유스케이스(Use Case)의 구성 요소 간의 관계에 포함되지 않는 것은?
① 연관
② 확장
③ 구체화
④ 일반화

24. 코드의 기본 기능으로 거리가 먼 것은?
① 복잡성
② 표준화
③ 분류
④ 식별

25. GoF(Gangs of Four) 디자인 패턴 중 생성 패턴으로 옳은 것은?
① Singleton Pattern
② Adapter Pattern
③ Decorator Pattern
④ State Pattern

27. 미들웨어 솔루션의 유형에 포함되지 않는 것은?
① WAS
② Web Server
③ RPC
④ ORB

28. 럼바우(Rumbaugh)의 객체 지향 분석에서 사용하는 분석 활동으로 옳은 것은?
① 객체 모델링, 동적 모델링, 정적 모델링
② 객체 모델링, 동적 모델링, 기능 모델링
③ 동적 모델링, 기능 모델링, 정적 모델링
④ 정적 모델링, 객체 모델링, 기능 모델링

29. 모바일 기기에서 사용하는 NUI 인터페이스에 속하지 않는 것은 무엇인가?
① Pinch
② Press
③ Flow
④ Flick

31. UML의 기본 구성 요소가 아닌 것은?
① Things
② Terminal
③ Relationship
④ Diagram

32. 요구사항 분석 시에 필요한 기술로 가장 거리가 먼 것은?
① 청취와 인터뷰 질문 기술
② 분석과 중재 기술
③ 설계 및 코딩 기술
④ 관찰 및 모델 작성 기술

33. 소프트웨어의 상위 설계에 속하지 않는 것은?
① 아키텍처 설계
② 모듈 설계
③ 인터페이스 정의
④ 사용자 인터페이스 설계

35. 소프트웨어의 사용자 인터페이스 개발 시스템(User Interface Development System)이 가져야 할 기
능이 아닌 것은?
① 사용자 입력의 검증
② 에러 처리와 에러 메시지 처리
③ 도움과 프롬프트(Prompt) 제공
④ 소스 코드 분석 및 오류 복구

36. 익스트림 프로그래밍(eXtreme Programming)의 5가지 가치에 속하지 않는 것은?
① 의사소통
② 단순성
③ 피드백
④ 고객 배제

38. 소프트웨어 설계 시 구축된 플랫폼의 성능 특성 분석에 사용되는 측정 항목이 아닌 것은?
① 응답시간(Response Time)
② 가용성(Availability)
③ 사용률(Utilization)
④ 서버 튜닝(Server Tuning)

39. 소프트웨어를 재사용함으로써 얻을 수 있는 이점으로 가장 거리가 먼 것은?
① 생산성 증가
② 프로젝트 문서 공유
③ 소프트웨어 품질 향상
④ 새로운 개발 방법론 도입 용이

41. 다음 중 블랙박스 검사 기법은?
① 경계값 분석
② 조건 검사
③ 기초 경로 검사
④ 루프 검사

42. 화이트박스 검사 기법에 해당하는 것으로만 짝지어진 것은?
㉠ 데이터 흐름 검사
㉡ 루프 검사
㉢ 동등 분할 검사
㉣ 경계값 분석
㉤ 원인 결과 그래프 기법
㉥ 오류 예측 기법
① ㉠, ㉡
② ㉠, ㉣
③ ㉡, ㉤
④ ㉢, ㉥

44. 반정규화(Denormalization) 유형 중 중복 테이블을 추가하는 방법에 해당하지 않는 것은?
① 빌드 테이블의 추가
② 집계 테이블의 추가
③ 진행 테이블의 추가
④ 특정 부분만을 포함하는 테이블 추가

45. 테스트 케이스 자동 생성 도구를 이용하여 테스트 데이터를 찾아내는 방법이 아닌 것은?
① 스텁(Stub)과 드라이버(Driver)
② 입력 도메인 분석
③ 랜덤(Random) 테스트
④ 자료 흐름도

47. 스택(STACK)의 응용 분야로 거리가 먼 것은?
① 인터럽트의 처리
② 수식의 계산
③ 서브루틴의 복귀 번지 저장
④ 운영체제의 작업 스케줄링

48. 다음 중 스택을 이용한 연산과 거리가 먼 것은?
① 선택 정렬
② 재귀 호출
③ 후위 표현(Post-Fix Expression)의 연산
④ 깊이 우선 탐색

50. 소스 코드 품질 분석 도구 중 정적 분석 도구가 아닌 것은?
① pmd
② checkstyle
③ valMeter
④ cppcheck

51. 인터페이스 보안을 위해 네트워크 영역에 적용될 수 있는 것으로 거리가 먼 것은?
① IPSec
② SSL
③ SMTP
④ S-HTTP

52. 다음 중 단위 테스트 도구로 사용될 수 없는 것은?
① CppUnit
② JUnit
③ HttpUnit
④ IgpUnit

54. 분산 데이터베이스의 투명성(Transparency)에 해당하지 않는 것은?
① Location Transparency
② Replication Transparency
③ Failure Transparency
④ Media Access Transparency

55. 소프트웨어 형상 관리에서 관리 항목에 포함되지 않는 것은?
① 프로젝트 요구 분석서
② 소스 코드
③ 운영 및 설치 지침서
④ 프로젝트 개발 비용

57. 알고리즘 설계 기법으로 거리가 먼 것은?
① Divide and Conquer
② Greedy
③ Static Block
④ Backtracking

58. EAI(Enterprise Application Integration)의 구축 유형으로 옳지 않은 것은?
① Point-to-Point
② Hub & Spoke
③ Message Bus
④ Tree

59. 인터페이스 구현 검증 도구가 아닌 것은?
① ESB
② xUnit
③ STAF
④ NTAF

61. 다음 중 단위 테스트를 통해 발견할 수 있는 오류가 아닌 것은?
① 알고리즘 오류에 따른 원치 않는 결과
② 탈출구가 없는 반복문의 사용
③ 모듈 간의 비정상적 상호 작용으로 인한 원치 않는 결과
④ 틀린 계산 수식에 의한 잘못된 결과

62. 물리데이터 저장소의 파티션 설계에서 파티션 유형으로 옳지 않은 것은?
① 범위 분할(Range Partitioning)
② 해시 분할(Hash Partitioning)
③ 조합 분할(Composite Partitioning)
④ 유닛 분할(Unit Partitioning)

63. 해싱 함수(Hashing Function)의 종류가 아닌 것은?
① 제곱법(Mid-Square)
② 숫자 분석법(Digit Analysis)
③ 개방 주소법(Open Addressing)
④ 제산법(Division)

65. 관계대수의 순수 관계 연산자가 아닌 것은?
① Select
② Cartesian Product
③ Division
④ Project

66. 디지털 저작권 관리(DRM)의 기술 요소가 아닌 것은?
① 크랙 방지 기술
② 정책 관리 기술
③ 암호화 기술
④ 방화벽 기술

67. 데이터 모델에 표시해야 할 요소로 거리가 먼 것은?
① 논리적 데이터 구조
② 출력 구조
③ 연산
④ 제약 조건

69. 테스트 케이스에 일반적으로 포함되는 항목이 아닌 것은?
① 테스트 조건
② 테스트 데이터
③ 테스트 비용
④ 예상 결과

70. 교착상태가 발생할 수 있는 조건이 아닌 것은?
① Mutual exclusion
② Hold and wait
③ Non-preemption
④ Linear wait

71. 공통 모듈의 재사용 범위에 따른 분류가 아닌 것은?
① 컴포넌트 재사용
② 더미코드 재사용
③ 함수와 객체 재사용
④ 애플리케이션 재사용

73. C언어에서 산술 연산자가 아닌 것은?
① %
② *
③ /
④ =

74. 다음 중 bash 쉘 스크립트에서 사용할 수 있는 제어문이 아닌 것은?
① if
② for
③ repeat_do
④ while

75. Java에서 사용되는 출력 함수가 아닌 것은?
① System.out.print( )
② System.out.println( )
③ System.out.printing( )
④ System.out.printf( )

77. PHP에서 사용 가능한 연산자가 아닌 것은?
① @
② #
③ ＜＞
④ ===

78. 운영체제에서 커널의 기능이 아닌 것은?
① 프로세스 생성, 종료
② 사용자 인터페이스
③ 기억장치 할당, 회수
④ 파일 시스템 관리

79. 운영체제를 기능에 따라 분류할 경우 제어 프로그램이 아닌 것은?
① 데이터 관리 프로그램
② 서비스 프로그램
③ 작업 제어 프로그램
④ 감시 프로그램

81. 스크립트 언어가 아닌 것은?
① PHP
② Cobol
③ Basic
④ Python

82. SQL의 논리 연산자가 아닌 것은?
① AND
② OTHER
③ OR
④ NOT

83. SQL의 명령어를 DCL, DML, DDL로 구분할 경우, 다음 중 성격이 다른 하나는?
① CREATE
② SELECT
③ ALTER
④ DROP

85. 오류 제어에 사용되는 자동 반복 요청 방식(ARQ)이 아닌 것은?
① Stop-and-wait ARQ
② Go-back-N ARO
③ Selective-Repeat ARQ
④ Non-Acknowledge ARQ

86. WAS(Web Application Server)가 아닌 것은?
① JEUS
② JVM
③ Tomcat
④ WebSphere

87. 다음 중 페이지 교체(Page Replacement) 알고리즘이 아닌 것은?
① FIFO(First-In-First-Out)
② LUF(Least Used First)
③ Optimal
④ LRU(Least Recently Used)

89. IPv6의 주소 체계로 거리가 먼 것은?
① Unicast
② Anycast
③ Broadcast
④ Multicast

90. 병행제어 기법의 종류가 아닌 것은?
① 로킹 기법
② 시분할 기법
③ 타임 스탬프 기법
④ 다중 버전 기법

92. OSI 7계층 중 데이터 링크 계층에 해당되는 프로토콜이 아닌 것은?
① HTTP
② HDLC
③ PPP
④ LLC

93. 다음 중 SQL의 집계 함수(Aggregation Function)가 아닌 것은?
① AVG
② COUNT
③ SUM
④ CREATE

94. TCP/IP 프로토콜 중 전송 계층 프로토콜은?
① HTTP
② SMTP
③ FTP
④ TCP

96. 블록 암호화 방식이 아닌 것은?
① DES
② RC4
③ AES
④ SEED

97. CMM(Capability Maturity Model) 모델의 레벨로 옳지 않은 것은?
① 최적 단계
② 관리 단계
③ 계획 단계
④ 정의 단계

98. 나선형(Spiral) 모형의 주요 태스크에 해당되지 않는 것은?
① 버전 관리
② 위험 분석
③ 개발
④ 평가

100. 정보 보안의 3요소에 해당하지 않는 것은?
① 기밀성
② 무결성
③ 가용성
④ 휘발성

101. CBD(Component Based Development) SW 개발 표준 산출물 중 분석 단계에 해당하는 것은?
① 클래스 설계서
② 통합시험 결과서
③ 프로그램 코드
④ 사용자 요구사항 정의서

103. Secure OS의 보안 기능으로 거리가 먼 것은?
① 식별 및 인증
② 임의적 접근 통제
③ 고가용성 지원
④ 강제적 접근 통제

104. 기능 점수(Functional Point) 모형에서 비용 산정에 이용되는 요소가 아닌 것은?
① 클래스 인터페이스
② 명령어(사용자 질의수)
③ 데이터 파일
④ 출력 보고서

106. 상향식 비용 산정 기법 중 LOC(원시 코드 라인 수) 기법에서 예측치를 구하기 위해 사용하는 항목이
아닌 것은?
① 낙관치
② 기대치
③ 비관치
④ 모형치

107. 세션 하이재킹을 탐지하는 방법으로 거리가 먼 것은?
① FTP SYN SEGMENT 탐지
② 비동기화 상태 탐지
③ ACK STORM 탐지
④ 패킷의 유실 및 재전송 증가 탐지

108. COCOMO 모델의 프로젝트 유형으로 거리가 먼 것은?
① Organic
② Semi-detached
③ Embedded
④ Sequential

110. 테일러링(Tailoring) 개발 방법론의 내부 기준에 해당하지 않는 것은?
① 납기/비용
② 기술 환경
③ 구성원 능력
④ 국제 표준 품질 기준

111. 소프트웨어 비용 추정 모형(Estimation Models)이 아닌 것은?
① COCOMO
② Putnam
③ Function-Point
④ PERT

113. DDoS 공격과 연관이 있는 공격 방법은?
① Secure shell
② Tribe Flood Network
③ Nimda
④ Deadlock

114. ISO 12207 표준의 기본 생명 주기의 주요 프로세스에 해당하지 않는 것은?
① 획득 프로세스
② 개발 프로세스
③ 성능평가 프로세스
④ 유지보수 프로세스



1. 소프트웨어 아키텍처와 관련한 설명으로 틀린 것은?
① 파이프 필터 아키텍처에서 데이터는 파이프를 통해 양방향으로 흐르며, 필터 이동 시 오버헤드가 발생
하지 않는다.
② 외부에서 인식할 수 있는 특성이 담긴 소프트웨어의 골격이 되는 기본 구조로 볼 수 있다.
③ 데이터 중심 아키텍처는 공유 데이터 저장소를 통해 접근자 간의 통신이 이루어지므로 각 접근자의 수
정과 확장이 용이하다.
④ 이해 관계자들의 품질 요구사항을 반영하여 품질 속성을 결정한다.

2. 애자일 기법에 대한 설명으로 맞지 않은 것은?
① 절차와 도구보다 개인과 소통을 중요하게 생각한다.
② 계획에 중점을 두어 변경 대응이 난해하다.
③ 소프트웨어가 잘 실행되는데 가치를 둔다.
④ 고객과의 피드백을 중요하게 생각한다.

3. 디자인 패턴을 이용한 소프트웨어 재사용으로 얻어지는 장점이 아닌 것은?
① 소프트웨어 코드의 품질을 향상시킬 수 있다.
② 개발 프로세스를 무시할 수 있다.
③ 개발자들 사이의 의사소통을 원활하게 할 수 있다.
④ 소프트웨어의 품질과 생산성을 향상시킬 수 있다.

4. 요구사항 관리 도구의 필요성으로 틀린 것은?
① 요구사항 변경으로 인한 비용 편익 분석
② 기존 시스템과 신규 시스템의 성능 비교
③ 요구사항 변경의 추적
④ 요구사항 변경에 따른 영향 평가

6. 사용자 인터페이스(UI)의 특징으로 틀린 것은?
① 구현하고자 하는 결과의 오류를 최소화한다.
② 사용자의 편의성을 높임으로써 작업 시간을 증가시킨다.
③ 막연한 작업 기능에 대해 구체적인 방법을 제시하여 준다.
④ 사용자 중심의 상호 작용이 되도록 한다.

7. 소프트웨어 설계에서 요구사항 분석에 대한 설명으로 틀린 것은?
① 소프트웨어가 무엇을 해야 하는가를 추적하여 요구사항 명세를 작성하는 작업이다.
② 사용자의 요구를 추출하여 목표를 정하고 어떤 방식으로 해결할 것인지 결정하는 단계이다.
③ 소프트웨어 시스템이 사용되는 동안 발견되는 오류를 정리하는 단계이다.
④ 소프트웨어 개발의 출발점이면서 실질적인 첫 번째 단계이다.

8. 설계 기법 중 하향식 설계 방법과 상향식 설계 방법에 대한 비교 설명으로 가장 옳지 않은 것은?
① 하향식 설계에서는 통합 검사 시 인터페이스가 이미 정의되어 있어 통합이 간단하다.
② 하향식 설계에서 레벨이 낮은 데이터 구조의 세부 사항은 설계 초기 단계에서 필요하다.
③ 상향식 설계는 최하위 수준에서 각각의 모듈들을 설계하고 이러한 모듈이 완성되면 이들을 결합하여
검사한다.
④ 상향식 설계에서는 인터페이스가 이미 성립되어 있지 않더라도 기능 추가가 쉽다.

9. 디자인 패턴 사용의 장·단점에 대한 설명으로 거리가 먼 것은?
① 소프트웨어 구조 파악이 용이하다.
② 객체지향 설계 및 구현의 생산성을 높이는데 적합하다.
③ 재사용을 위한 개발 시간이 단축된다.
④ 절차형 언어와 함께 이용될 때 효율이 극대화된다.


10. 소프트웨어 아키텍처 모델 중 MVC(Model-View Controller)와 관련한 설명으로 틀린 것은?
① MVC 모델은 사용자 인터페이스를 담당하는 계층의 응집도를 높일 수 있고, 여러 개의 다른 UI를 만들
어 그 사이에 결합도를 낮출 수 있다.
② 모델(Model)은 뷰(View)와 제어(Controller) 사이에서 전달자 역할을 하며, 뷰마다 모델 서브시스템이
각각 하나씩 연결된다.
③ 뷰(View)는 모델(Model)에 있는 데이터를 사용자 인터페이스에 보이는 역할을 담당한다.
④ 제어(Controller)는 모델(Model)에 명령을 보냄으로써 모델의 상태를 변경할 수 있다.

11. 모듈의 독립성을 높이기 위한 결합도(Coupling)와 관련한 설명으로 틀린 것은?
① 오류가 발생했을 때 전파되어 다른 오류의 원인이 되는 파문 효과(Ripple Effect)를 최소화해야 한다.
② 인터페이스가 정확히 설정되어 있지 않을 경우 불필요한 인터페이스가 나타나 모듈 사이의 의존도는
높아지고 결합도가 증가한다.
③ 모듈들이 변수를 공유하여 사용하게 하거나 제어 정보를 교류하게 함으로써 결합도를 낮추어야 한다.
④ 다른 모듈과 데이터 교류가 필요한 경우 전역 변수(Global Variable)보다는 매개 변수(Parameter)를
사용하는 것이 결합도를 낮추는 데 도움이 된다.

12. 소프트웨어 공학에서 워크스루(Walkthrough)에 대한 설명으로 틀린 것은?
① 사용사례를 확장하여 명세하거나 설계 다이어그램, 원시코드, 테스트 케이스 등에 적용할 수 있다.
② 복잡한 알고리즘 또는 반복, 실시간 동작, 병행 처리와 같은 기능이나 동작을 이해하려고 할 때 유용하다.
③ 인스펙션(Inspection)과 동일한 의미를 가진다.
④ 단순한 테스트 케이스를 이용하여 프로덕트를 수작업으로 수행해 보는 것이다.

13. 객체지향 설계에서 정보 은닉(Information Hiding)과 관련한 설명으로 틀린 것은?
① 필요하지 않은 정보는 접근할 수 없도록 하여 한 모듈 또는 하부 시스템이 다른 모듈의 구현에 영향을
받지 않게 설계되는 것을 의미한다.
② 모듈들 사이의 독립성을 유지시키는 데 도움이 된다.
③ 설계에서 은닉되어야 할 기본 정보로는 IP 주소와 같은 물리적 코드, 상세 데이터 구조 등이 있다.
④ 모듈 내부의 자료 구조와 접근 동작들에만 수정을 국한하기 때문에 요구사항 등 변화에 따른 수정이
불가능하다.


14. 소프트웨어 공학에서 워크스루(Walkthrough)에 대한 설명으로 틀린 것은?
① 사용사례를 확장하여 명세하거나 설계 다이어그램, 원시코드, 테스트 케이스 등에 적용할 수 있다.
② 복잡한 알고리즘 또는 반복, 실시간 동작, 병행 처리와 같은 기능이나 동작을 이해하려고 할 때 유용하다.
③ 인스펙션(Inspection)과 동일한 의미를 가진다.
④ 단순한 테스트 케이스를 이용하여 프로덕트를 수작업으로 수행해 보는 것이다.

15. 요구 분석(Requirement Analysis)에 대한 설명으로 틀린 것은?
① 요구 분석은 소프트웨어 개발의 실제적인 첫 단계로, 사용자의 요구에 대해 이해하는 단계라 할 수 있다.
② 요구 추출(Requirement Elicitation)은 프로젝트 계획 단계에 정의한 문제의 범위 안에 있는 사용자의
요구를 찾는 단계이다.
③ 도메인 분석(Domain Analysis)은 요구에 대한 정보를 수집하고 배경을 분석하여 이를 토대로 모델링
을 하게 된다.
④ 기능적(Functional) 요구에서 시스템 구축에 대한 성능, 보안, 품질, 안정 등에 대한 요구사항을 도출
한다.

16. 코드 인스펙션과 관련한 설명으로 틀린 것은?
① 프로그램을 수행시켜보는 것 대신에 읽어보고 눈으로 확인하는 방법으로 볼 수 있다.
② 코드 품질 향상 기법 중 하나이다.
③ 동적 테스트 시에만 활용하는 기법이다.
④ 결함과 함께 코딩 표준 준수 여부, 효율성 등의 다른 품질 이슈를 검사하기도 한다.

17. 프로그램 설계도의 하나인 NS Chart에 대한 설명으로 가장 거리가 먼 것은?
① 논리의 기술에 중점을 두고 도형을 이용한 표현 방법이다.
② 이해하기 쉽고 코드 변환이 용이하다.
③ 화살표나 GOTO를 사용하여 이해하기 쉽다.
④ 연속, 선택, 반복 등의 제어 논리 구조를 표현한다.

19. 소프트웨어 개발에서 모듈(Module)이 되기 위한 주요 특징에 해당하지 않는 것은?
① 다른 것들과 구별될 수 있는 독립적인 기능을 가진 단위(Unit)이다.
② 독립적인 컴파일이 가능하다.
③ 유일한 이름을 가져야 한다.
④ 다른 모듈에서의 접근이 불가능해야 한다.

20. 공학적으로 잘된 소프트웨어(Well Engineered Software)의 설명 중 틀린 것은?
① 소프트웨어는 유지보수가 용이해야 한다.
② 소프트웨어는 신뢰성이 높아야 한다.
③ 소프트웨어는 사용자 수준에 무관하게 일관된 인터페이스를 제공해야 한다.
④ 소프트웨어는 충분한 테스팅을 거쳐야 한다.

21. 소프트웨어 모델링과 관련한 설명으로 틀린 것은?
① 모델링 작업의 결과물은 다른 모델링 작업에 영향을 줄 수 없다.
② 구조적 방법론에서는 DFD(Data Flow Diagram), DD(Data Dictionary) 등을 사용하여 요구사항의 결
과를 표현한다.
③ 객체지향 방법론에서는 UML 표기법을 사용한다.
④ 소프트웨어 모델을 사용할 경우 개발될 소프트웨어에 대한 이해도 및 이해 당사자 간의 의사소통 향상
에 도움이 된다.

22. 요구사항 명세 기법에 대한 설명으로 틀린 것은?
① 비정형 명세 기법은 사용자의 요구를 표현할 때 자연어를 기반으로 서술한다.
② 비정형 명세 기법은 사용자의 요구를 표현할 때 Z 비정형 명세 기법을 사용한다.
③ 정형 명세 기법은 사용자의 요구를 표현할 때 수학적인 원리와 표기법을 이용한다.
④ 정형 명세 기법은 비정형 명세 기법에 비해 표현이 간결하다.


23. 분산 시스템에서의 미들웨어(Middleware)와 관련한 설명으로 틀린 것은?
① 분산 시스템에서 다양한 부분을 관리하고 통신하며 데이터를 교환하게 해주는 소프트웨어로 볼 수 있다.
② 위치 투명성(Location Transparency)을 제공한다.
③ 분산 시스템의 여러 컴포넌트가 요구하는 재사용 가능한 서비스의 구현을 제공한다.
④ 애플리케이션과 사용자 사이에서만 분산 서비스를 제공한다.

24. GoF(Gang of Four) 디자인 패턴과 관련한 설명으로 틀린 것은?
① 디자인 패턴을 목적(Purpose)으로 분류할 때 생성, 구조, 행위로 분류할 수 있다.
② Strategy 패턴은 대표적인 구조 패턴으로 인스턴스를 복제하여 사용하는 구조를 말한다.
③ 행위 패턴은 클래스나 객체들이 상호작용하는 방법과 책임을 분산하는 방법을 정의한다.
④ Singleton 패턴은 특정 클래스의 인스턴스가 오직 하나임을 보장하고, 이 인스턴스에 대한 접근 방법
을 제공한다.

25. 객체지향 분석 기법과 관련한 설명으로 틀린 것은?
① 동적 모델링 기법이 사용될 수 있다.
② 기능 중심으로 시스템을 파악하며 순차적인 처리가 중요시되는 하향식(Top-down) 방식으로 볼 수 있다.
③ 데이터와 행위를 하나로 묶어 객체를 정의하고 추상화시키는 작업이라 할 수 있다.
④ 코드 재사용에 의한 프로그램 생산성 향상 및 요구에 따른 시스템의 쉬운 변경이 가능하다.

26. 소프트웨어 모듈화의 장점이 아닌 것은?
① 오류의 파급 효과를 최소화한다.
② 기능의 분리가 가능하여 인터페이스가 복잡하다.
③ 모듈의 재사용 가능으로 개발과 유지보수가 용이하다.
④ 프로그램의 효율적인 관리가 가능하다.

28. CASE(Computer-Aided Software Engineering) 도구에 대한 설명으로 거리가 먼 것은?
① 소프트웨어 개발 과정의 일부 또는 전체를 자동화하기 위한 도구이다.
② 표준화된 개발 환경 구축 및 문서 자동화 기능을 제공한다.
③ 작업 과정 및 데이터 공유를 통해 작업자 간 커뮤니케이션을 증대한다.
④ 2000년대 이후 소개되었으며, 객체지향 시스템에 한해 효과적으로 활용된다.

29. 애자일 소프트웨어 개발 기법의 가치가 아닌 것은?
① 프로세스의 도구보다는 개인과 상호 작용에 더 가치를 둔다.
② 계약 협상보다는 고객과의 협업에 더 가치를 둔다.
③ 실제 작동하는 소프트웨어보다는 이해하기 좋은 문서에 더 가치를 둔다.
④ 계획을 따르기보다는 변화에 대응하는 것에 더 가치를 둔다.

30. 분산 시스템을 위한 마스터-슬레이브(Master-Slave) 아키텍처에 대한 설명으로 틀린 것은?
① 일반적으로 실시간 시스템에서 사용된다.
② 마스터 프로세스는 일반적으로 연산, 통신, 조정을 책임진다.
③ 슬레이브 프로세스는 데이터 수집 기능을 수행할 수 없다.
④ 마스터 프로세스는 슬레이브 프로세스들을 제어할 수 있다.

31. 소프트웨어 개발에 이용되는 모델(Model)에 대한 설명 중 거리가 먼 것은?
① 모델은 개발 대상을 추상화하고 기호나 그림 등으로 시각적으로 표현한다.
② 모델을 통해 소프트웨어에 대한 이해도를 향상시킬 수 있다.
③ 모델을 통해 이해 당사자 간의 의사소통이 향상된다.
④ 모델을 통해 향후 개발될 시스템의 유추는 불가능하다.

33. 정형 기술 검토(FTR)의 지침으로 틀린 것은?
① 의제를 제한한다.
② 논쟁과 반박을 제한한다.
③ 문제 영역을 명확히 표현한다.
④ 참가자의 수를 제한하지 않는다.

34. 사용자 인터페이스를 설계할 경우 고려해야 할 가이드라인과 가장 거리가 먼 것은?
① 심미성을 사용성보다 우선하여 설계해야 한다.
② 효율성을 높이게 설계해야 한다.
③ 발생하는 오류를 쉽게 수정할 수 있어야 한다.
④ 사용자에게 피드백을 제공해야 한다.

35. UML(Unified Modeling Language)에 대한 설명 중 틀린 것은?
① 기능적 모델은 사용자 측면에서 본 시스템 기능이며, UML에서는 Use case Diagram을 사용한다.
② 정적 모델은 객체, 속성, 연관 관계, 오퍼레이션의 시스템의 구조를 나타내며, UML에서는 Class
Diagram을 사용한다.
③ 동적 모델은 시스템의 내부 동작을 말하며, UML에서는 Sequence Diagram, State Diagram,
Activity Diagram을 사용한다.
④ State Diagram은 객체들 사이의 메시지 교환을 나타내며, Sequence Diagram은 하나의 객체가 가진
상태와 그 상태의 변화에 의한 동작 순서를 나타낸다.

37. UI의 설계 지침으로 틀린 것은?
① 이해하기 편하고 쉽게 사용할 수 있는 환경을 제공해야 한다.
② 주요 기능을 메인 화면에 노출하여 조작이 쉽도록 하여야 한다.
③ 치명적인 오류에 대한 부정적인 사항은 사용자가 인지할 수 없도록 한다.
④ 사용자의 직무, 연령, 성별 등 다양한 계층을 수용하여야 한다.

38. 소프트웨어 개발 방법 중 요구사항 분석(Requirements Analysis)과 거리가 먼 것은?
① 비용과 일정에 대한 제약 설정
② 타당성 조사
③ 요구사항 정의 문서화
④ 설계 명세서 작성

39. 요구사항 검증(Requirements Validation)과 관련한 설명으로 틀린 것은?
① 요구사항이 고객이 정말 원하는 시스템을 제대로 정의하고 있는지 점검하는 과정이다.
② 개발 완료 이후에 문제점이 발견될 경우 막대한 재작업 비용이 들 수 있기 때문에 요구사항 검증은 매
우 중요하다.
③ 요구사항이 실제 요구를 반영하는지, 문서상의 요구사항은 서로 상충되지 않는지 등을 점검한다.
④ 요구사항 검증 과정을 통해 모든 요구사항 문제를 발견할 수 있다.

41. 객체지향 기법의 캡슐화(Encapsulation)에 대한 설명으로 틀린 것은?
① 인터페이스가 단순화 된다.
② 소프트웨어 재사용성이 높아진다.
③ 변경 발생 시 오류의 파급 효과가 적다.
④ 상위 클래스의 모든 속성과 연산을 하위 클래스가 물려받는 것을 의미한다.

42. User Interface 설계 시 오류 메시지나 경고에 관한 지침으로 가장 거리가 먼 것은?
① 메시지는 이해하기 쉬워야 한다.
② 오류로부터 회복을 위한 구체적인 설명이 제공되어야 한다.
③ 오류로 인해 발생될 수 있는 부정적인 내용을 적극적으로 사용자들에게 알려야 한다.
④ 소리나 색의 사용을 줄이고 텍스트로만 전달하도록 한다.

43. 익스트림 프로그래밍(XP)에 대한 설명으로 틀린 것은?
① 빠른 개발을 위해 테스트를 수행하지 않는다.
② 사용자의 요구사항은 언제든지 변할 수 있다.
③ 고객과 직접 대면하며 요구사항을 이야기하기 위해 사용자 스토리(User Story)를 활용할 수 있다.
④ 기존의 방법론에 비해 실용성(Pragmatism)을 강조한 것이라고 볼 수 있다.

44. 바람직한 소프트웨어 설계 지침이 아닌 것은?
① 모듈의 기능을 예측할 수 있도록 정의한다.
② 이식성을 고려한다.
③ 적당한 모듈의 크기를 유지한다.
④ 가능한 모듈을 독립적으로 생성하고 결합도를 최대화한다.


45. DFD(Data Flow Diagram)에 대한 설명으로 틀린 것은?
① 자료 흐름 그래프 또는 버블(Bubble) 차트라고도 한다.
② 구조적 분석 기법에 이용된다.
③ 시간 흐름을 명확하게 표현할 수 있다.
④ DFD의 요소는 화살표, 원, 사각형, 직선(단선/이중선)으로 표시한다.

46. CASE(Computer Aided Software Engineering)에 대한 설명으로 틀린 것은?
① 소프트웨어 모듈의 재사용성이 향상된다.
② 자동화된 기법을 통해 소프트웨어 품질이 향상된다.
③ 소프트웨어 사용자들에게 사용 방법을 신속히 숙지시키기 위해 사용된다.
④ 소프트웨어 유지보수를 간편하게 수행할 수 있다.

47. 익스트림 프로그래밍에 대한 설명으로 틀린 것은?
① 대표적인 구조적 방법론 중 하나이다.
② 소규모 개발 조직이 불확실하고 변경이 많은 요구를 접하였을 때 적절한 방법이다.
③ 익스트림 프로그래밍을 구동시키는 원리는 상식적인 원리와 경험을 최대한 끌어 올리는 것이다.
④ 구체적인 실천 방법을 정의하고 있으며, 개발 문서보다는 소스 코드에 중점을 둔다.

48. 객체지향 개념을 활용한 소프트웨어 구현과 관련한 설명 중 틀린 것은?
① 객체(Object)란 필요한 자료 구조와 수행되는 함수들을 가진 하나의 독립된 존재이다.
② JAVA에서 정보 은닉(Information Hiding)을 표기할 때 private의 의미는 ‘공개’이다.
③ 상속(Inheritance)은 개별 클래스를 상속 관계로 묶음으로써 클래스 간의 체계화된 전체 구조를 파악하
기 쉽다는 장점이 있다.
④ 같은 클래스에 속하는 개개의 객체이자 하나의 클래스에서 생성된 객체를 인스턴스(Instance)라고 한다.

50. 미들웨어(Middleware)에 대한 설명으로 틀린 것은?
① 여러 운영체제에서 응용 프로그램들 사이에 위치한 소프트웨어이다.
② 미들웨어의 서비스 이용을 위해 사용자가 정보 교환 방법 등의 내부 동작을 쉽게 확인할 수 있어야 한다.
③ 소프트웨어 컴포넌트를 연결하기 위한 준비된 인프라 구조를 제공한다.
④ 여러 컴포넌트를 1 대 1, 1 대 다, 다 대 다 등 여러 가지 형태로 연결이 가능하다.

51. 모듈화(Modularity)와 관련한 설명으로 틀린 것은?
① 시스템을 모듈로 분할하면 각각의 모듈을 별개로 만들고 수정할 수 있기 때문에 좋은 구조가 된다.
② 응집도는 모듈과 모듈 사이의 상호 의존 또는 연관 정도를 의미한다.
③ 모듈 간의 결합도가 약해야 독립적인 모듈이 될 수 있다.
④ 모듈 내 구성 요소들 간의 응집도가 강해야 좋은 모듈 설계이다.

52. 요구사항 분석이 어려운 이유가 아닌 것은?
① 개발자와 사용자 간의 지식이나 표현의 차이가 커서 상호 이해가 쉽지 않다.
② 사용자의 요구는 예외가 거의 없어 열거와 구조화가 어렵지 않다.
③ 사용자의 요구사항이 모호하고 불명확하다.
④ 소프트웨어 개발 과정 중에 요구사항이 계속 변할 수 있다.

53. 효과적인 모듈 설계를 위한 유의사항으로 거리가 먼 것은?
① 모듈간의 결합도를 약하게 하면 모듈 독립성이 향상된다.
② 복잡도와 중복성을 줄이고 일관성을 유지시킨다.
③ 모듈의 기능은 예측이 가능해야 하며 지나치게 제한적이어야 한다.
④ 유지보수가 용이해야 한다.


54. HIPO(Hierarchy Input Process Output)에 대한 설명으로 거리가 먼 것은?
① 상향식 소프트웨어 개발을 위한 문서화 도구이다.
② HIPO 차트 종류에는 가시적 도표, 총체적 도표, 세부적 도표가 있다.
③ 기능과 자료의 의존 관계를 동시에 표현할 수 있다.
④ 보기 쉽고 이해하기 쉽다.

55. 소프트웨어 개발 단계에서 요구 분석 과정에 대한 설명으로 거리가 먼 것은?
① 분석 결과의 문서화를 통해 향후 유지보수에 유용하게 활용할 수 있다.
② 개발 비용이 가장 많이 소요되는 단계이다.
③ 자료 흐름도, 자료 사전 등이 효과적으로 이용될 수 있다.
④ 보다 구체적인 명세를 위해 소단위 명세서(Mini-Spec)가 활용될 수 있다.

56. 메시지 지향 미들웨어(MOM; Message-Oriented Middleware)에 대한 설명으로 틀린 것은?
① 느리고 안정적인 응답보다는 즉각적인 응답이 필요한 온라인 업무에 적합하다.
② 독립적인 애플리케이션을 하나의 통합된 시스템으로 묶기 위한 역할을 한다.
③ 송신측과 수신측의 연결 시 메시지 큐를 활용하는 방법이 있다.
④ 상이한 애플리케이션 간 통신을 비동기 방식으로 지원한다.

57. 소프트웨어 설치 매뉴얼에 대한 설명으로 틀린 것은?
① 설치 과정에서 표시될 수 있는 예외상황에 관련 내용을 별도로 구분하여 설명한다.
② 설치 시작부터 완료할 때까지의 전 과정을 빠짐없이 순서대로 설명한다.
③ 설치 매뉴얼은 개발자 기준으로 작성한다.
④ 설치 매뉴얼에는 목차, 개요, 기본사항 등이 기본적으로 포함되어야 한다.

58. 저작권 관리 구성 요소에 대한 설명이 틀린 것은?
① 콘텐츠 제공자(Contents Provider) : 콘텐츠를 제공하는 저작권자
② 콘텐츠 분배자(Contents Distributor) : 콘텐츠를 메타 데이터와 함께 배포 가능한 단위로 묶는 기능
③ 클리어링 하우스(Clearing House) : 키 관리 및 라이선스 발급 관리
④ DRM 컨트롤러 : 배포된 콘텐츠의 이용 권한을 통제


59. 단위 테스트(Unit Test)와 관련한 설명으로 틀린 것은?
① 구현 단계에서 각 모듈의 개발을 완료한 후 개발자가 명세서의 내용대로 정확히 구현되었는지 테스트
한다.
② 모듈 내부의 구조를 구체적으로 볼 수 있는 구조적 테스트를 주로 시행한다.
③ 필요 데이터를 인자를 통해 넘겨주고, 테스트 완료 후 그 결과값을 받는 역할을 하는 가상의 모듈을 테
스트 스텁(Stub)이라고 한다.
④ 테스트할 모듈을 호출하는 모듈도 있고, 테스트할 모듈이 호출하는 모듈도 있다.

60. 소프트웨어 테스트와 관련한 설명으로 틀린 것은?
① 화이트박스 테스트는 모듈의 논리적인 구조를 체계적으로 점검할 수 있다.
② 블랙박스 테스트는 프로그램의 구조를 고려하지 않는다.
③ 테스트 케이스에는 일반적으로 시험 조건, 테스트 데이터, 예상 결과가 포함되어야 한다.
④ 화이트박스 테스트에서 기본 경로(Basis Path)란 흐름 그래프의 시작 노드에서 종료 노드까지의 서로
독립된 경로로 싸이클을 허용하지 않는 경로를 말한다.

61. 이진 검색 알고리즘에 대한 설명으로 틀린 것은?
① 탐색 효율이 좋고 탐색 시간이 적게 소요된다.
② 검색할 데이터가 정렬되어 있어야 한다.
③ 피보나치 수열에 따라 다음에 비교할 대상을 선정하여 검색한다.
④ 비교 횟수를 거듭할 때마다 검색 대상이 되는 데이터의 수가 절반으로 줄어든다.

62. 소프트웨어 패키징 도구 활용 시 고려사항으로 틀린 것은?
① 반드시 내부 콘텐츠에 대한 암호화 및 보안을 고려한다.
② 보안을 위하여 이기종 연동을 고려하지 않아도 된다.
③ 사용자 편의성을 위한 복잡성 및 비효율성 문제를 고려한다.
④ 제품 소프트웨어 종류에 적합한 암호화 알고리즘을 적용한다.

64. 연결 리스트(Linked List)에 대한 설명으로 거리가 먼 것은?
① 노드의 삽입이나 삭제가 쉽다.
② 노드들이 포인터로 연결되어 검색이 빠르다.
③ 연결을 해주는 포인터(Pointer)를 위한 추가 공간이 필요하다.
④ 연결 리스트 중에서 중간 노드 연결이 끊어지면 다음 노드를 찾기 힘들다.

65. 클린 코드(Clean Code)를 작성하기 위한 원칙으로 틀린 것은?
① 추상화 : 하위 클래스/메소드/함수를 통해 애플리케이션의 특성을 간략하게 나타내고, 상세 내용은 상
위 클래스/메소드/함수에서 구현한다.
② 의존성 : 다른 모듈에 미치는 영향을 최소화하도록 작성한다.
③ 가독성 : 누구든지 읽기 쉽게 코드를 작성한다.
④ 중복성 : 중복을 최소화할 수 있는 코드를 작성한다.

66. 빌드 자동화 도구에 대한 설명으로 틀린 것은?
① Gradle은 실행할 처리 명령들을 모아 태스크로 만든 후 태스크 단위로 실행한다.
② 빌드 자동화 도구는 지속적인 통합 개발 환경에서 유용하게 활용된다.
③ 빌드 자동화 도구에는 Ant, Gradle, Jenkins 등이 있다.
④ Jenkins는 Groovy를 기반으로 한 오픈 소스로 안드로이드 앱 개발 환경에서 사용된다.

67. 테스트 드라이버(Test Driver)에 대한 설명으로 틀린 것은?
① 시험대상 모듈을 호출하는 간이 소프트웨어이다.
② 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여줄 수 있다.
③ 상향식 통합 테스트에서 사용된다.
④ 테스트 대상 모듈이 호출하는 하위 모듈의 역할을 한다.


68. White Box Testing에 대한 설명으로 옳지 않은 것은?
① Base Path Testing, Boundary Value Analysis가 대표적인 기법이다.
② Source Code의 모든 문장을 한 번 이상 수행함으로써 진행된다.
③ 모듈 안의 작동을 직접 관찰할 수 있다.
④ 산출물의 각 기능별로 적절한 프로그램의 제어 구조에 따라 선택, 반복 등의 부분들을 수행함으로써 논
리적 경로를 점검한다.

69. 테스트 케이스와 관련한 설명으로 틀린 것은?
① 테스트의 목표 및 테스트 방법을 결정하기 전에 테스트 케이스를 작성해야 한다.
② 프로그램에 결함이 있더라도 입력에 대해 정상적인 결과를 낼 수 있기 때문에 결함을 검사할 수 있는
테스트 케이스를 찾는 것이 중요하다.
③ 개발된 서비스가 정의된 요구사항을 준수하는지 확인하기 위한 입력 값과 실행 조건, 예상 결과의 집합
으로 볼 수 있다.
④ 테스트 케이스 실행이 통과되었는지 실패하였는지 판단하기 위한 기준을 테스트 오라클(Test Oracle)
이라고 한다.

70. 자료 구조에 대한 설명으로 틀린 것은?
① 큐는 비선형 구조에 해당한다.
② 큐는 First In-First Out 처리를 수행한다.
③ 스택은 Last In-First Out 처리를 수행한다.
④ 스택은 서브루틴 호출, 인터럽트 처리, 수식 계산 및 수식 표기법에 응용된다.

71. 소프트웨어 테스트에서 검증(Verification)과 확인(Validation)에 대한 설명으로 틀린 것은?
① 소프트웨어 테스트에서 검증과 확인을 구별하면 찾고자 하는 결함 유형을 명확하게 하는 데 도움이 된다.
② 검증은 소프트웨어 개발 과정을 테스트하는 것이고, 확인은 소프트웨어 결과를 테스트하는 것이다.
③ 검증은 작업 제품이 요구 명세의 기능, 비기능 요구사항을 얼마나 잘 준수하는지 측정하는 작업이다.
④ 검증은 작업 제품이 사용자의 요구에 적합한지 측정하며, 확인은 작업 제품이 개발자의 기대를 충족시
키는지를 측정한다.

73. 소프트웨어 형상 관리(Configuration Management)에 관한 설명으로 틀린 것은?
① 소프트웨어에서 일어나는 수정이나 변경을 알아내고 제어하는 것을 의미한다.
② 소프트웨어 개발의 전체 비용을 줄이고, 개발 과정의 여러 방해 요인이 최소화되도록 보증하는 것을 목
적으로 한다.
③ 형상 관리를 위하여 구성된 팀을 “Chief Programmer Team”이라고 한다.
④ 형상 관리의 기능 중 하나는 버전 제어 기술이다.

74. 화이트박스 테스트와 관련한 설명으로 틀린 것은?
① 화이트박스 테스트의 이해를 위해 논리 흐름도(Logic-Flow Diagram)를 이용할 수 있다.
② 테스트 데이터를 이용해 실제 프로그램을 실행함으로써 오류를 찾는 동적 테스트(Dynamic Test)에 해
당한다.
③ 프로그램의 구조를 고려하지 않기 때문에 테스트 케이스는 프로그램 또는 모듈의 요구나 명세를 기초
로 결정한다.
④ 테스트 데이터를 선택하기 위하여 검증 기준(Test Coverage)을 정한다.

75. IPSec(IP Security)에 대한 설명으로 틀린 것은?
① 암호화 수행시 일방향 암호화만 지원한다.
② ESP는 발신지 인증, 데이터 무결성, 기밀성 모두를 보장한다.
③ 운영 모드는 Tunnel 모드와 Transport 모드로 분류된다.
④ AH는 발신지 호스트를 인증하고, IP 패킷의 무결성을 보장한다.

77. 제품 소프트웨어의 형상 관리 역할로 틀린 것은?
① 형상 관리를 통해 이전 리버전이나 버전에 대한 정보에 접근 가능하여 배포본 관리에 유용
② 불필요한 사용자의 소스 수정 제한
③ 프로젝트 개발 비용을 효율적으로 관리
④ 동일한 프로젝트에 대해 여러 개발자 동시 개발 가능

78. 스택에 대한 설명으로 틀린 것은?
① 입출력이 한쪽 끝으로만 제한된 리스트이다.
② Head(front)와 Tail(rear)의 2개 포인터를 갖고 있다.
③ LIFO 구조이다.
④ 더 이상 삭제할 데이터가 없는 상태에서 데이터를 삭제하면 언더플로(Underflow)가 발생한다.

79. EAI(Enterprise Application Integration) 구축 유형 중 Hybrid에 대한 설명으로 틀린 것은?
① Hub & Spoke와 Message Bus의 혼합 방식이다.
② 필요한 경우 한 가지 방식으로 EAI 구현이 가능하다.
③ 데이터 병목 현상을 최소화할 수 있다.
④ 중간에 미들웨어를 두지 않고 각 애플리케이션을 Point to Point로 연결한다.

81. 블랙박스 테스트를 이용하여 발견할 수 있는 오류가 아닌 것은?
① 비정상적인 자료를 입력해도 오류 처리를 수행하지 않는 경우
② 정상적인 자료를 입력해도 요구된 기능이 제대로 수행되지 않는 경우
③ 반복 조건을 만족하는데도 루프 내의 문장이 수행되지 않는 경우
④ 경계값을 입력할 경우 요구된 출력 결과가 나오지 않는 경우

82. 코드의 간결성을 유지하기 위해 사용되는 지침으로 틀린 것은?
① 공백을 이용하여 실행문 그룹과 주석을 명확히 구분한다.
② 복잡한 논리식과 산술식은 괄호와 들여쓰기(Indentation)를 통해 명확히 표현한다.
③ 빈 줄을 사용하여 선언부와 구현부를 구별한다.
④ 한 줄에 최대한 많은 문장을 코딩한다.

83. 소프트웨어 형상 관리에 대한 설명으로 거리가 먼 것은?
① 소프트웨어에 가해지는 변경을 제어하고 관리한다.
② 프로젝트 계획, 분석서, 설계서, 프로그램, 테스트 케이스 모두 관리 대상이다.
③ 대표적인 형상 관리 도구로 Ant, Maven, Gradle 등이 있다.
④ 유지보수 단계뿐만 아니라 개발 단계에도 적용할 수 있다.

84. IDE(Integrated Development Environment) 도구의 각 기능에 대한 설명으로 틀린 것은?
① Coding - 프로그래밍 언어를 가지고 컴퓨터 프로그램을 작성할 수 있는 환경을 제공
② Compile – 저급 언어의 프로그램을 고급 언어 프로그램으로 변환하는 기능
③ Debugging - 프로그램에서 발견되는 버그를 찾아 수정할 수 있는 기능
④ Deployment - 소프트웨어를 최종 사용자에게 전달하기 위한 기능


85. 클린 코드 작성원칙에 대한 설명으로 틀린 것은?
① 코드의 중복을 최소화한다.
② 코드가 다른 모듈에 미치는 영향을 최대화하도록 작성한다.
③ 누구든지 코드를 쉽게 읽을 수 있도록 작성한다.
④ 간단하게 코드를 작성한다.

86. 알고리즘과 관련한 설명으로 틀린 것은?
① 주어진 작업을 수행하는 컴퓨터 명령어를 순서대로 나열한 것으로 볼 수 있다.
② 검색(Searching)은 정렬이 되지 않은 데이터 혹은 정렬이 된 데이터 중에서 키값에 해당되는 데이터를
찾는 알고리즘이다.
③ 정렬(Sorting)은 흩어져있는 데이터를 키값을 이용하여 순서대로 열거하는 알고리즘이다.
④ 선형 검색은 검색을 수행하기 전에 반드시 데이터의 집합이 정렬되어 있어야 한다.

87. 소스 코드 정적 분석(Static Analysis)에 대한 설명으로 틀린 것은?
① 소스 코드를 실행시키지 않고 분석한다.
② 코드에 있는 오류나 잠재적인 오류를 찾아내기 위한 활동이다.
③ 하드웨어적인 방법으로만 코드 분석이 가능하다.
④ 자료 흐름이나 논리 흐름을 분석하여 비정상적인 패턴을 찾을 수 있다.

88. 힙 정렬(Heap Sort)에 대한 설명으로 틀린 것은?
① 정렬할 입력 레코드들로 힙을 구성하고 가장 큰 키 값을 갖는 루트 노드를 제거하는 과정을 반복하여
정렬하는 기법이다.
② 평균 수행 시간은 O(nlog2n)이다.
③ 완전 이진 트리(Complete Binary Tree)로 입력자료의 레코드를 구성한다.
④ 최악의 수행 시간은 O(2n4)이다.

90. 정규화에 대한 설명으로 적절하지 않은 것은?
① 데이터베이스의 개념적 설계 단계 이전에 수행한다.
② 데이터 구조의 안정성을 최대화한다.
③ 중복을 배제하여 삽입, 삭제, 갱신 이상의 발생을 방지한다.
④ 데이터 삽입 시 릴레이션을 재구성할 필요성을 줄인다.

91. 정규화의 필요성으로 거리가 먼 것은?
① 데이터 구조의 안정성 최대화
② 중복 데이터의 활성화
③ 수정, 삭제 시 이상 현상의 최소화
④ 테이블 불일치 위험의 최소화

92. 물리적 데이터베이스 설계에 대한 설명으로 거리가 먼 것은?
① 물리적 설계의 목적은 효율적인 방법으로 데이터를 저장하는 것이다.
② 트랜잭션 처리량과 응답시간, 디스크 용량 등을 고려해야 한다.
③ 저장 레코드의 형식, 순서, 접근 경로와 같은 정보를 사용하여 설계한다.
④ 트랜잭션의 인터페이스를 설계하며, 데이터 타입 및 데이터 타입들 간의 관계로 표현한다.

93. 개체-관계(E-R) 모델에 대한 설명으로 잘못된 것은?
① 특정 DBMS를 고려하여 제작하지 않는다.
② 개체는 마름모, 속성은 사각형을 이용하여 표현한다.
③ 개념적 데이터베이스 단계에서 제작된다.
④ E-R 모델의 기본적인 아이디어를 시각적으로 가장 잘 나타낸 것이 E-R 다이어그램이다.

95. 뷰(View)에 대한 설명으로 옳지 않은 것은?
① 뷰는 CREATE 문을 사용하여 정의한다.
② 뷰는 데이터의 논리적 독립성을 제공한다.
③ 뷰를 제거할 때는 DROP 문을 사용한다.
④ 뷰는 저장장치 내에 물리적으로 존재한다.

96. 속성(attribute)에 대한 설명으로 틀린 것은?
① 속성은 개체의 특성을 기술한다.
② 속성은 데이터베이스를 구성하는 가장 작은 논리적 단위이다.
③ 속성은 파일 구조상 데이터 항목 또는 데이터 필드에 해당된다.
④ 속성의 수를 “cardinality”라고 한다.

97. 뷰(VIEW)에 대한 설명으로 옳지 않은 것은?
① DBA는 보안 측면에서 뷰를 활용할 수 있다.
② 뷰 위에 또 다른 뷰를 정의할 수 있다.
③ 뷰에 대한 삽입, 갱신, 삭제 연산 시 제약사항이 따르지 않는다.
④ 독립적인 인덱스를 가질 수 없다.

98. 데이터베이스의 무결성 규정(Integrity Rule)과 관련한 설명으로 틀린 것은?
① 무결성 규정에는 데이터가 만족해야 될 제약 조건, 규정을 참조할 때 사용하는 식별자 등의 요소가 포
함될 수 있다.
② 무결성 규정의 대상으로는 도메인, 키, 종속성 등이 있다.
③ 정식으로 허가받은 사용자가 아닌 불법적인 사용자에 의한 갱신으로부터 데이터베이스를 보호하기 위
한 규정이다.
④ 릴레이션 무결성 규정(Relation Integrity Rules)은 릴레이션을 조작하는 과정에서의 의미적 관계
(Semantic Relationship)를 명세한 것이다.


99. 데이터베이스에서 병행제어의 목적으로 틀린 것은?
① 시스템 활용도 최대화
② 사용자에 대한 응답시간 최소화
③ 데이터베이스 공유 최소화
④ 데이터베이스 일관성 유지

100. DELETE 명령에 대한 설명으로 틀린 것은?
① 테이블의 행을 삭제할 때 사용한다.
② WHERE 조건절이 없는 DELETE 명령을 수행하면 DROP TABLE 명령을 수행했을 때와 동일한 효과를
얻을 수 있다.
③ SQL을 사용 용도에 따라 분류할 경우 DML에 해당한다.
④ 기본 사용 형식은 “DELETE FROM 테이블 [WHERE 조건];” 이다.

101. 분산 데이터베이스 시스템(Distributed Database System)에 대한 설명으로 틀린 것은?
① 분산 데이터베이스는 논리적으로는 하나의 시스템에 속하지만, 물리적으로는 여러 개의 컴퓨터 사이트
에 분산되어 있다.
② 위치 투명성, 중복 투명성, 병행 투명성, 장애 투명성을 목표로 한다.
③ 데이터베이스의 설계가 비교적 어렵고, 개발 비용과 처리 비용이 증가한다는 단점이 있다.
④ 분산 데이터베이스 시스템의 주요 구성 요소는 분산 처리기, P2P 시스템, 단일 데이터베이스 등이 있다.

102. 관계대수와 관계해석에 대한 설명으로 옳지 않는 것은?
① 관계대수는 원래 수학의 프레디킷 해석에 기반을 두고 있다.
② 관계대수로 표현한 식은 관계해석으로 표현할 수 있다.
③ 관계해석은 관계 데이터의 연산을 표현하는 방법이다.
④ 관계해석은 원하는 정보가 무엇이라는 것만 정의하는 비절차적인 특징을 가지고 있다.

104. 데이터베이스의 인덱스와 관련한 설명으로 틀린 것은?
① 문헌의 색인, 사전과 같이 데이터를 쉽고 빠르게 찾을 수 있도록 만든 데이터 구조이다.
② 테이블에 붙여진 색인으로 데이터 검색 시 처리 속도 향상에 도움이 된다.
③ 인덱스의 추가, 삭제 명령어는 각각 ADD, DELETE이다.
④ 대부분의 데이터베이스에서 테이블을 삭제하면 인덱스도 같이 삭제된다.

105. 관계형 데이터 모델의 릴레이션에 대한 설명으로 틀린 것은?
① 모든 속성 값은 원자 값을 갖는다.
② 한 릴레이션에 포함된 튜플은 모두 상이하다.
③ 한 릴레이션에 포함된 튜플 사이에는 순서가 없다.
④ 한 릴레이션을 구성하는 속성 사이에는 순서가 존재한다.

106. 정규화를 거치지 않아 발생하게 되는 이상(anomaly) 현상의 종류에 대한 설명으로 옳지 않은 것은?
① 삭제 이상이란 릴레이션에서 한 튜플을 삭제할 때 의도와는 상관없는 값들로 함께 삭제되는 연쇄 삭제
현상이다.
② 삽입 이상이란 릴레이션에서 데이터를 삽입할 때 의도와는 상관없이 원하지 않는 값들로 함께 삽입되
는 현상이다.
③ 갱신 이상이란 릴레이션에서 튜플에 있는 속성값을 갱신할 때 일부 튜플의 정보만 갱신되어 정보에 모
순이 생기는 현상이다.
④ 종속 이상이란 하나의 릴레이션에 하나 이상의 함수적 종속성이 존재하는 현상이다.

107. SQL의 TRUNCATE 명령어에 대한 설명으로 옳지 않은 것은?
① DELETE와 같이 테이블의 모든 데이터를 삭제한다.
② DROP과 달리 테이블 스키마는 제거되지 않고 유지된다.
③ DELETE에 비해 빠르게 데이터를 제거하는 것이 가능하다.
④ DELETE와 동일하게 ROLLBACK 명령어로 삭제된 데이터를 되살릴 수 있다.


108. 시스템 카탈로그에 대한 설명으로 옳지 않은 것은?
① 사용자가 직접 시스템 카탈로그의 내용을 갱신하여 데이터베이스 무결성을 유지한다.
② 시스템 자신이 필요로 하는 스키마 및 여러 가지 객체에 관한 정보를 포함하고 있는 시스템 데이터베
이스이다.
③ 시스템 카탈로그에 저장되는 내용을 메타 데이터라고도 한다.
④ 시스템 카탈로그는 DBMS가 스스로 생성하고 유지한다.

109. 데이터베이스에서 개념적 설계 단계에 대한 설명으로 틀린 것은?
① 산출물로 E-R Diagram을 만들 수 있다.
② DBMS에 독립적인 개념 스키마를 설계한다.
③ 트랜잭션 인터페이스를 설계 및 작성한다.
④ 논리적 설계 단계의 앞 단계에서 수행된다.

110. 관계대수에 대한 설명으로 틀린 것은?
① 원하는 릴레이션을 정의하는 방법을 제공하며 비절차적 언어이다.
② 릴레이션 조작을 위한 연산의 집합으로 피연산자와 결과가 모두 릴레이션이다.
③ 일반 집합 연산과 순수 관계 연산으로 구분된다.
④ 질의에 대한 해를 구하기 위해 수행해야 할 연산의 순서를 명시한다.

111. 데이터베이스의 논리적 설계(Logical Design) 단계에서 수행하는 작업이 아닌 것은?
① 레코드 집중의 분석 및 설계
② 논리적 데이터베이스 구조로 매핑(mapping)
③ 트랜잭션 인터페이스 설계
④ 스키마의 평가 및 정제

112. 데이터 제어 언어(DCL)의 기능으로 옳지 않은 것은?
① 데이터 보안
② 논리적, 물리적 데이터 구조 정의
③ 무결성 유지
④ 병행수행 제어


113. CREATE TABLE문에 포함되지 않는 기능은?
① 속성 타입 변경
② 속성의 NOT NULL 여부 지정
③ 기본키를 구성하는 속성 지정
④ CHECK 제약조건의 정의

114. 무결성을 보장하기 위해 트랜잭션이 가져야 할 특성에 대한 설명으로 옳지 않은 것은?
① 트랜잭션 내의 모든 명령은 반드시 완벽히 수행되어야 하며, 모두가 완벽히 수행되지 않고 어느 하나라
도 오류가 발생하면 트랜잭션 전부가 취소되어야 한다.
② 트랜잭션의 수행과 관계 없이 데이터베이스가 가지고 있는 고정요소는 일관되어야 한다.
③ 둘 이상의 트랜잭션이 동시에 병행 실행되는 경우 어느 하나의 트랜잭션 실행 중에 다른 트랜잭션의
연산이 끼어들 수 없다.
④ Commit과 Rollback 명령어에 의해 보장받는 트랜잭션의 특성은 일관성이다.

115. 데이터베이스 설계 시 물리적 설계 단계에서 수행하는 사항이 아닌 것은?
① 저장 레코드 양식 설계
② 레코드 집중의 분석 및 설계
③ 접근 경로 설계
④ 목표 DBMS에 맞는 스키마 설계

116. 분산 데이터베이스 시스템과 관련한 설명으로 틀린 것은?
① 물리적으로 분산된 데이터베이스 시스템을 논리적으로 하나의 데이터베이스 시스템처럼 사용할 수 있
도록 한 것이다.
② 물리적으로 분산되어 지역별로 필요한 데이터를 처리할 수 있는 지역 컴퓨터(Local Computer)를 분산
처리기(Distributed Processor)라고 한다.
③ 분산 데이터베이스 시스템을 위한 통신 네트워크 구조가 데이터 통신에 영향을 주므로 효율적으로 설
계해야 한다.
④

데이터베이스가

분산되어

있음을

사용자가

인식할

수

Transparency)을 배제해야 한다.

118. SQL과 관련한 설명으로 틀린 것은?
① REVOKE 키워드를 사용하여 열 이름을 다시 부여할 수 있다.
② 데이터 정의어는 기본 테이블, 뷰 테이블, 또는 인덱스 등을 생성, 변경, 제거하는데 사용되는 명령어이다.
③ DISTINCT를 활용하여 중복 값을 제거할 수 있다.
④ JOIN을 통해 여러 테이블의 레코드를 조합하여 표현할 수 있다.

119. 데이터베이스에서 인덱스(Index)와 관련한 설명으로 틀린 것은?
① 인덱스의 기본 목적은 검색 성능을 최적화하는 것으로 볼 수 있다.
② B-트리 인덱스는 분기를 목적으로 하는 Branch Block을 가지고 있다.
③ BETWEEN 등 범위(Range) 검색에 활용될 수 있다.
④ 시스템이 자동으로 생성하여 사용자가 변경할 수 없다.

120. 병행제어 기법 중 로킹에 대한 설명으로 옳지 않은 것은?
① 로킹의 대상이 되는 객체의 크기를 로킹 단위라고 한다.
② 데이터베이스, 파일, 레코드 등은 로킹 단위가 될 수 있다.
③ 로킹의 단위가 작아지면 로킹 오버헤드가 증가한다.
④ 로킹의 단위가 커지면 데이터베이스 공유도가 증가한다.

121. C언어에서의 변수 선언으로 틀린 것은?
① int else;
② int Test2;
③ int pc;
④ int True;

123. RIP 라우팅 프로토콜에 대한 설명으로 틀린 것은?
① 경로 선택 메트릭은 홉 카운트(hop count)이다.
② 라우팅 프로토콜을 IGP와 EGP로 분류했을 때 EGP에 해당한다.
③ 최단 경로 탐색에 Bellman-Ford 알고리즘을 사용한다.
④ 각 라우터는 이웃 라우터들로부터 수신한 정보를 이용하여 라우팅 표를 갱신한다.

124. IP 주소 체계와 관련한 설명으로 틀린 것은?
① IPv6의 패킷 헤더는 32 octet의 고정된 길이를 가진다.
② IPv6는 주소 자동설정(Auto Configuration) 기능을 통해 손쉽게 이용자의 단말을 네트워크에 접속시
킬 수 있다.
③ IPv4는 호스트 주소를 자동으로 설정하며 유니캐스트(Unicast)를 지원한다.
④ IPv4는 클래스별로 네트워크와 호스트 주소의 길이가 다르다.

125. UNIX 운영체제에 관한 특징으로 틀린 것은?
① 하나 이상의 작업에 대하여 백그라운드에서 수행이 가능하다.
② Multi-User는 지원하지만 Multi-Tasking은 지원하지 않는다.
③ 트리 구조의 파일 시스템을 갖는다.
④ 이식성이 높으며 장치 간의 호환성이 높다.

126. JAVA에서 변수와 자료형에 대한 설명으로 틀린 것은?
① 변수는 어떤 값을 주기억장치에 기억하기 위해서 사용하는 공간이다.
② 변수의 자료형에 따라 저장할 수 있는 값의 종류와 범위가 달라진다.
③ char 자료형은 나열된 여러 개의 문자를 저장하고자 할 때 사용한다.
④ boolean 자료형은 조건이 참인지 거짓인지 판단하고자 할 때 사용한다.

128. 프로세스 적재 정책과 관련한 설명으로 틀린 것은?
① 반복, 스택, 부프로그램은 시간 지역성(Temporal Locality)과 관련이 있다.
② 공간 지역성(Spatial Locality)은 프로세스가 어떤 페이지를 참조했다면 이후 가상주소 공간상 그 페이
지와 인접한 페이지들을 참조할 가능성이 높음을 의미한다.
③ 일반적으로 페이지 교환에 보내는 시간보다 프로세스 수행에 보내는 시간이 더 크면 스레싱
(Thrashing)이 발생한다.
④ 스레싱(Thrashing) 현상을 방지하기 위해서는 각 프로세스가 필요로 하는 프레임을 제공할 수 있어야
한다.

129. TCP 헤더와 관련한 설명으로 틀린 것은?
① 순서 번호(Sequence Number)는 전달하는 바이트마다 번호가 부여된다.
② 수신 번호 확인(Acknowledgement Number)은 상대편 호스트에서 받으려는 바이트의 번호를 정의한다.
③ 체크섬(Checksum)은 데이터를 포함한 세그먼트의 오류를 검사한다.
④ 윈도우 크기는 송수신 측의 버퍼 크기로 최대 크기는 32767bit이다.

130. JAVA의 예외(exception)와 관련한 설명으로 틀린 것은?
① 문법 오류로 인해 발생한 것
② 오동작이나 결과에 악영향을 미칠 수 있는 실행 시간 동안에 발생한 오류
③ 배열의 인덱스가 그 범위를 넘어서는 경우 발생하는 오류
④ 존재하지 않는 파일을 읽으려고 하는 경우에 발생하는 오류

131. TCP 프로토콜에 대한 설명으로 거리가 먼 것은?
① 신뢰성이 있는 연결 지향형 전달 서비스이다.
② 기본 헤더 크기는 100byte이고 160byte까지 확장 가능하다.
③ 스트림 전송 기능을 제공한다.
④ 순서 제어, 오류 제어, 흐름 제어 기능을 제공한다


132. IPv6에 대한 설명으로 틀린 것은?
① 32비트의 주소 체계를 사용한다.
② 멀티미디어의 실시간 처리가 가능하다.
③ IPv4보다 보안성이 강화되었다.
④ 자동으로 네트워크 환경 구성이 가능하다.

133. 파이썬의 변수 작성 규칙 설명으로 옳지 않은 것은?
① 첫 자리에 숫자를 사용할 수 없다.
② 영문 대문자/소문자, 숫자, 밑줄(_)의 사용이 가능하다.
③ 변수 이름의 중간에 공백을 사용할 수 있다.
④ 이미 사용되고 있는 예약어는 사용할 수 없다.

134. C언어에서 사용할 수 없는 변수명은?
① student2019
② text-color
③ _korea
④ amount

135. 다음 중 HRN에 대한 설명으로 옳지 않은 것은?
① 대기 시간과 서비스 시간을 이용하는 방법이다.
② 대기 시간이 긴 프로세스일 경우 우선순위가 높다.
③ 우선순위 계산식 값이 낮을수록 우선순위가 높다.
④ SJF 기법을 보완하기 위한 스케줄링 방법이다.

137. 다음 중 프로세스에 대한 설명 중 틀린 것은?
① 프로세서가 할당되는 실체로, 디스패치가 가능한 단위이다.
② 프로세스는 비동기적 행위를 일으키는 주체이다.
③ 프로세스는 스레드 내의 작업 단위를 의미하며, 경량 스레드라고도 불린다.
④ PCB를 가지며 PCB에는 프로세스의 현재상태, 고유식별자를 가지고 있다.

138. IPv6에 대한 특성으로 틀린 것은?
① 표시 방법은 8비트씩 4부분의 10진수로 표시한다.
② 2128개의 주소를 표현할 수 있다.
③ 등급별, 서비스별로 패킷을 구분할 수 있어 품질 보장이 용이하다.
④ 확장 기능을 통해 보안 기능을 제공한다.

139. 파일 디스크립터(File Descriptor)에 대한 설명으로 틀린 것은?
① 파일 관리를 위해 시스템이 필요로 하는 정보를 가지고 있다.
② 보조기억장치에 저장되어 있다가 파일이 개방(open)되면 주기억장치로 이동된다.
③ 사용자가 파일 디스크립터를 직접 참조할 수 있다.
④ 파일 제어 블록(File Control Block)이라고도 한다.

140. UDP 프로토콜의 특징이 아닌 것은?
① 비연결형 서비스를 제공한다.
② 단순한 헤더 구조로 오버헤드가 적다.
③ 주로 주소를 지정하고, 경로를 설정하는 기능을 한다.
④ TCP와 같이 트랜스포트 계층에 존재한다.


141. UNIX의 쉘(Shell)에 관한 설명으로 옳지 않은 것은?
① 명령어 해석기이다.
② 시스템과 사용자 간의 인터페이스를 담당한다.
③ 여러 종류의 쉘이 있다.
④ 프로세스, 기억장치, 입출력 관리를 수행한다.

142. 라이브러리의 개념과 구성에 대한 설명 중 틀린 것은?
① 라이브러리란 필요할 때 찾아서 쓸 수 있도록 모듈화되어 제공되는 프로그램을 말한다.
② 프로그래밍 언어에 따라 일반적으로 도움말, 설치 파일, 샘플 코드 등을 제공한다.
③ 외부 라이브러리는 프로그래밍 언어가 기본적으로 가지고 있는 라이브러리를 의미하며, 표준 라이브러
리는 별도의 파일 설치를 필요로 하는 라이브러리를 의미한다.
④ 라이브러리는 모듈과 패키지를 총칭하며, 모듈이 개별 파일이라면 패키지는 파일들을 모아 놓은 폴더라
고 볼 수 있다.

143. C언어에서 malloc( ) 함수에 대한 설명으로 틀린 것은?
① 원하는 시점에 원하는 만큼 메모리를 동적으로 할당한다.
② 사용자가 입력한 bit만큼 메모리를 할당한다.
③ free 명령어로 할당된 메모리를 해제한다.
④ 메모리 할당이 불가능할 경우 NULL이 반환된다.

144. IP 프로토콜의 주요 특징에 해당하지 않는 것은?
① 체크섬(Checksum) 기능으로 데이터 체크섬(Data Checksum)만 제공한다.
② 패킷을 분할, 병합하는 기능을 수행하기도 한다.
③ 비연결형 서비스를 제공한다.
④ Best Effort 원칙에 따른 전송 기능을 제공한다.

146. 배치 프로그램의 필수 요소에 대한 설명으로 틀린 것은?
① 자동화는 심각한 오류 상황 외에는 사용자의 개입 없이 동작해야 한다.
② 안정성은 어떤 문제가 생겼는지, 언제 발생했는지 등을 추적할 수 있어야 한다.
③ 대용량 데이터는 대용량의 데이터를 처리할 수 있어야 한다.
④ 무결성은 주어진 시간 내에 처리를 완료할 수 있어야 하고, 동시에 동작하고 있는 다른 애플리케이션을
방해하지 말아야 한다.

147. TCP 프로토콜과 관련한 설명으로 틀린 것은?
① 인접한 노드 사이의 프레임 전송 및 오류를 제어한다.
② 흐름 제어(Flow Control)의 기능을 수행한다.
③ 전이중(Full Duplex) 방식의 양방향 가상 회선을 제공한다.
④ 전송 데이터와 응답 데이터를 함께 전송할 수 있다.

148. IPv6에 대한 설명으로 틀린 것은?
① 멀티캐스팅(Multicast) 대신 브로드캐스트(Broadcast)를 사용한다.
② 보안과 인증 확장 헤더를 사용함으로써 인터넷 계층의 보안 기능을 강화하였다.
③ 애니캐스트(Anycast)는 하나의 호스트에서 그룹 내의 가장 가까운 곳에 있는 수신자에게 전달하는 방
식이다.
④ 128비트 주소 체계를 사용한다.

149. 리눅스 Bash 쉘(Shell)에서 export와 관련한 설명으로 틀린 것은?
① 변수를 출력하고자 할 때는 export를 사용해야 한다.
② export가 매개 변수 없이 쓰일 경우 현재 설정된 환경 변수들이 출력된다.
③ 사용자가 생성하는 변수는 export 명령어로 표시하지 않는 한 현재 쉘에 국한된다.
④ 변수를 export 시키면 전역(Global) 변수처럼 되어 끝까지 기억된다.


150. 운영체제에 대한 설명으로 거리가 먼 것은?
① 다중 사용자와 다중 응용 프로그램 환경 하에서 자원의 현재 상태를 파악하고 자원 분배를 위한 스케
줄링을 담당한다.
② CPU, 메모리 공간, 기억 장치, 입출력 장치 등의 자원을 관리한다.
③ 운영체제의 종류로는 매크로 프로세서, 어셈블러, 컴파일러 등이 있다.
④ 입·출력장치와 사용자 프로그램을 제어한다.

151. 다음 중 IP 버전에 대한 설명 중 틀린 것은?
① IPv4는 각 부분을 옥텟으로 구성, 총 32비트로 구성된다.
② IPv6는 각 부분을 콜론으로 구분한다.
③ IPv4는 네트워크 부분의 길이에 따라 A 클래스에서 E 클래스까지 총 5단계로 구성되어 있다.
④ IPv6는 IPv4에 비해 자료 전송 속도가 느리다.

152. 소프트웨어 개발 프레임워크를 적용할 경우 기대 효과로 거리가 먼 것은?
① 품질 보증
② 시스템 복잡도 증가
③ 개발 용이성
④ 변경 용이성

153. Windows 파일 시스템인 FAT와 비교했을 때의 NTFS의 특징이 아닌 것은?
① 보안에 취약
② 대용량 볼륨에 효율적
③ 자동 압축 및 안정성
④ 저용량 볼륨에서의 속도 저하

155. 해쉬(Hash) 기법에 대한 설명으로 틀린 것은?
① 임의의 길이의 입력 데이터를 받아 고정된 길이의 해쉬 값으로 변환한다.
② 주로 공개키 암호화 방식에서 키 생성을 위해 사용한다.
③ 대표적인 해쉬 알고리즘으로 HAVAL, SHA-1 등이 있다.
④ 해쉬 함수는 일방향 함수(One-way function)이다.

156. Secure OS의 보안 기능으로 거리가 먼 것은?
① 식별 및 인증
② 임의적 접근 통제
③ 고가용성 지원
④ 강제적 접근 통제

157. 소프트웨어 개발 방법론의 테일러링(Tailoring)과 관련한 설명으로 틀린 것은?
① 프로젝트 수행 시 예상되는 변화를 배제하고 신속히 진행하여야 한다.
② 프로젝트에 최적화된 개발 방법론을 적용하기 위해 절차, 산출물 등을 적절히 변경하는 활동이다.
③ 관리 측면에서의 목적 중 하나는 최단기간에 안정적인 프로젝트 진행을 위한 사전 위험을 식별하고 제
거하는 것이다.
④ 기술적 측면에서의 목적 중 하나는 프로젝트에 최적화된 기술 요소를 도입하여 프로젝트 특성에 맞는
최적의 기법과 도구를 사용하는 것이다.

159. 공개키 암호에 대한 설명으로 틀린 것은?
① 10명이 공개키 암호를 사용할 경우 5개의 키가 필요하다.
② 복호화키는 비공개 되어 있다.
③ 송신자는 수신자의 공개키로 문서를 암호화한다.
④ 공개키 암호로 널리 알려진 알고리즘은 RSA가 있다.

160. COCOMO 모델에 의한 비용 산정에 대한 설명으로 옳지 않은 것은?
① 보헴이 제안한 원시 프로그램의 규모에 의한 비용 예측 모형이다.
② 같은 규모의 소프트웨어라도 그 유형에 따라 비용이 다르게 산정된다.
③ 비용 산정 유형으로 Organic Mode, Embedded Mode, Semi-Detached Mode가 있다.
④ UFP(Unadjusted Function Point)를 계산한다.

161. 소프트웨어 공학에 대한 설명으로 거리가 먼 것은?
① 소프트웨어 공학이란 소프트웨어의 개발, 운용, 유지보수 및 파기에 대한 체계적인 접근 방법이다.
② 소프트웨어 공학은 소프트웨어 제품의 품질을 향상시키고 소프트웨어 생산성과 작업 만족도를 증대시
키는 것이 목적이다.
③ 소프트웨어 공학의 궁극적 목표는 최대의 비용으로 계획된 일정보다 가능한 빠른 시일 내에 소프트웨
어를 개발하는 것이다.
④ 소프트웨어 공학은 신뢰성 있는 소프트웨어를 경제적인 비용으로 획득하기 위해 공학적 원리를 정립하
고 이를 이용하는 것이다.

163. 대칭 암호 알고리즘과 비대칭 암호 알고리즘에 대한 설명으로 틀린 것은?
① 대칭 암호 알고리즘은 비교적 실행 속도가 빠르기 때문에 다양한 암호의 핵심 함수로 사용될 수 있다.
② 대칭 암호 알고리즘은 비밀키 전달을 위한 키 교환이 필요하지 않아 암호화 및 복호화의 속도가 빠르다.
③ 비대칭 암호 알고리즘은 자신만이 보관하는 비밀키를 이용하여 인증, 전자서명 등에 적용이 가능하다.
④ 대표적인 대칭키 암호 알고리즘으로는 AES, IDEA 등이 있다.

164. IPSec(IP Security)에 대한 설명으로 틀린 것은?
① 암호화 수행 시 일방향 암호화만 지원한다.
② ESP는 발신지 인증, 데이터 무결성, 기밀성 모두를 보장한다.
③ 운영 모드는 Tunnel 모드와 Transport 모드로 분류된다.
④ AH는 발신지 호스트를 인증하고, IP 패킷의 무결성을 보장한다.

165. CBD(Component Based Development)에 대한 설명으로 틀린 것은?
① 개발 기간 단축으로 인한 생산성 향상
② 새로운 기능 추가가 쉬운 확장성
③ 소프트웨어 재사용이 가능
④ 1960년대까지 가장 많이 적용되었던 소프트웨어 개발 방법

166. 소프트웨어 개발 방법론 중 CBD(Component Based Development)에 대한 설명으로 틀린 것은?
① 생산성과 품질을 높이고, 유지보수 비용을 최소화할 수 있다.
② 컴포넌트 제작 기법을 통해 재사용성을 향상시킨다.
③ 모듈의 분할과 정복에 의한 하향식 설계방식이다.
④ 독립적인 컴포넌트 단위의 관리로 복잡성을 최소화할 수 있다.


167. NS(Nassi-Schneiderman) Chart에 대한 설명으로 거리가 먼 것은?
① 논리의 기술에 중점을 둔 도형식 표현 방법이다.
② 연속, 선택 및 다중 선택, 반복 등의 제어논리 구조로 표현한다.
③ 주로 화살표를 사용하여 논리적인 제어 구조로 흐름을 표현한다.
④ 조건이 복합되어 있는 곳의 처리를 시각적으로 명확히 식별하는데 적합하다.

168. 공개키 암호화 방식에 대한 설명으로 틀린 것은?
① 공개키로 암호화된 메시지는 반드시 공개키로 복호화 해야 한다.
② 비대칭 암호기법이라고도 한다.
③ 대표적인 기법은 RSA 기법이 있다.
④ 키 분배가 용이하고, 관리해야 할 키 개수가 적다.

169. 소프트웨어 정의 데이터센터(SDDC; Software Defined Data Center)에 대한 설명으로 틀린 것은?
① 컴퓨팅, 네트워킹, 스토리지, 관리 등을 모두 소프트웨어로 정의한다.
② 인력 개입 없이 소프트웨어 조작만으로 자동 제어 관리한다.
③ 데이터센터 내 모든 자원을 가상화하여 서비스한다.
④ 특정 하드웨어에 종속되어 특화된 업무를 서비스하기에 적합하다.

170. 클라우드 기반 HSM(Cloud-based Hardware Security Module)에 대한 설명으로 틀린 것은?
① 클라우드(데이터센터) 기반 암호화 키 생성, 처리, 저장 등을 하는 보안 기기이다.
② 국내에서는 공인인증제의 폐지와 전자서명법 개정을 추진하면서 클라우드 HSM 용어가 자주 등장하였다.
③ 클라우드에 인증서를 저장하므로 기존 HSM 기기나 휴대폰에 인증서를 저장해 다닐 필요가 없다.
④ 하드웨어가 아닌 소프트웨어적으로만 구현되기 때문에 소프트웨어식 암호 기술에 내재된 보안 취약점
을 해결할 수 없다는 것이 주요 단점이다.

172. 스트림 암호화 방식의 설명으로 옳지 않은 것은?
① 비트/바이트/단어들을 순차적으로 암호화한다.
② 해쉬 함수를 이용한 해쉬 암호화 방식을 사용한다.
③ RC4는 스트림 암호화 방식에 해당한다.
④ 대칭키 암호화 방식이다.

173. 취약점 관리를 위한 응용 프로그램의 보안 설정과 가장 거리가 먼 것은?
① 서버 관리실 출입 통제
② 실행 프로세스 권한 설정
③ 운영체제의 접근 제한
④ 운영체제의 정보 수집 제한

174. 소프트웨어 생명 주기 모형 중 Spiral Model에 대한 설명으로 틀린 것은?
① 비교적 대규모 시스템에 적합하다.
② 개발 순서는 계획 및 정의, 위험 분석, 공학적 개발, 고객 평가 순으로 진행된다.
③ 소프트웨어를 개발하면서 발생할 수 있는 위험을 관리하고 최소화하는 것을 목적으로 한다.
④ 계획, 설계, 개발, 평가의 개발 주기가 한 번만 수행된다.

175. SSH(Secure Shell)에 대한 설명으로 틀린 것은?
① SSH의 기본 네트워크 포트는 220번을 사용한다.
② 전송되는 데이터는 암호화 된다.
③ 키를 통한 인증은 클라이언트의 공개키를 서버에 등록해야 한다.
④ 서로 연결되어 있는 컴퓨터 간 원격 명령 실행이나 셀 서비스 등을 수행한다.

177. 간트 차트(Gantt Chart)에 대한 설명으로 틀린 것은?
① 프로젝트를 이루는 소작업 별로 언제 시작되고 언제 끝나야 하는지를 한 눈에 볼 수 있도록 도와준다.
② 자원 배치 계획에 유용하게 사용된다.
③ CPM 네트워크로부터 만드는 것이 가능하다.
④ 수평 막대의 길이는 각 작업(Task)에 필요한 인원수를 나타낸다.

178. 소프트웨어 생명 주기 모델 중 V 모델과 관련한 설명으로 틀린 것은?
① 요구 분석 및 설계 단계를 거치지 않으며 항상 통합 테스트를 중심으로 V 형태를 이룬다.
② Perry에 의해 제안되었으며 세부적인 테스트 과정으로 구성되어 신뢰도 높은 시스템을 개발하는 데 효
과적이다.
③ 개발 작업과 검증 작업 사이의 관계를 명확히 들어내 놓은 폭포수 모델의 변형이라고 볼 수 있다.
④ 폭포수 모델이 산출물 중심이라면 V 모델은 작업과 결과의 검증에 초점을 둔다.

179. 폭포수 모형의 특징으로 거리가 먼 것은?
① 개발 중 발생한 요구사항을 쉽게 반영할 수 있다.
② 순차적인 접근 방법을 이용한다.
③ 단계적 정의와 산출물이 명확하다.
④ 모형의 적용 경험과 성공사례가 많다.

180. 소프트웨어 개발 프레임워크의 적용 효과로 볼 수 없는 것은?
① 공통 컴포넌트 재사용으로 중복 예산 절감
② 기술 종속으로 인한 선행 사업자 의존도 증대
③ 표준화된 연계 모듈 활용으로 상호 운용성 향상
④ 개발표준에 의한 모듈화로 유지보수 용이


181. RIP(Routing Information Protocol)에 대한 설명으로 틀린 것은?
① 거리 벡터 라우팅 프로토콜이라고도 한다.
② 소규모 네트워크 환경에 적합하다.
③ 최대 홉 카운트를 115홉 이하로 한정하고 있다.
④ 최단경로탐색에는 Bellman-Ford 알고리즘을 사용한다.

182. SQL Injection 공격과 관련한 설명으로 틀린 것은?
① SQL Injection은 임의로 작성한 SQL 구문을 애플리케이션에 삽입하는 공격 방식이다.
② SQL Injection 취약점이 발생하는 곳은 주로 웹 애플리케이션과 데이터베이스가 연동되는 부분이다.
③ DBMS의 종류와 관계없이 SQL Injection 공격 기법은 모두 동일하다.
④ 로그인과 같이 웹에서 사용자의 입력값을 받아 데이터베이스 SQL문으로 데이터를 요청하는 경우 SQL
Injection을 수행할 수 있다.

183. 물리적 위협으로 인한 문제에 해당하지 않는 것은?
① 화재, 홍수 등 천재지변으로 인한 위협
② 하드웨어 파손, 고장으로 인한 장애
③ 방화, 테러로 인한 하드웨어와 기록장치를 물리적으로 파괴하는 행위
④ 방화벽 설정의 잘못된 조작으로 인한 네트워크, 서버 보안 위협

184. 침입 탐지 시스템(IDS; Intrusion Detection System)과 관련한 설명으로 틀린 것은?
① 이상 탐지 기법(Anomaly Detection)은 Signature Base나 Knowledge Base라고도 불리며 이미 발견
되고 정립된 공격 패턴을 입력해두었다가 탐지 및 차단한다.
② HIDS(Host-Based Intrusion Detection)는 운영체제에 설정된 사용자 계정에 따라 어떤 사용자가 어
떤 접근을 시도하고 어떤 작업을 했는지에 대한 기록을 남기고 추적한다.
③ NIDS(Network-Based Intrusion Detection System)로는 대표적으로 Snort가 있다.
④ 외부 인터넷에 서비스를 제공하는 서버가 위치하는 네트워크인 DMZ(Demilitarized Zone)에는 IDS가
설치될 수 있다.


185. C Class에 속하는 IP address는?
① 200.168.30.1
② 10.3.2.14
③ 225.2.4.1
④ 172.16.98.3

186. 시스템에서 모듈 사이의 결합도(Coupling)에 대한 설명으로 옳은 것은?
① 한 모듈 내에 있는 처리 요소들 사이의 기능적인 연관 정도를 나타낸다.
② 결합도가 높으면 시스템 구현 및 유지보수 작업이 쉽다.
③ 모듈 간의 결합도를 약하게 하면 모듈 독립성이 향상된다.
④ 자료 결합도는 내용 결합도보다 결합도가 높다.

187. 스레드(Thread)에 대한 설명으로 옳지 않은 것은?
① 한 개의 프로세스는 여러 개의 스레드를 가질 수 없다.
② 커널 스레드의 경우 운영체제에 의해 스레드를 운용한다.
③ 사용자 스레드의 경우 사용자가 만든 라이브러리를 사용하여 스레드를 운용한다.
④ 스레드를 사용함으로써 하드웨어, 운영체제의 성능과 응용 프로그램의 처리율을 향상시킬 수 있다.

188. 프레임워크(Framework)에 대한 설명으로 옳은 것은?
① 소프트웨어 구성에 필요한 기본 구조를 제공함으로써 재사용이 가능하게 해준다.
② 소프트웨어 개발 시 구조가 잡혀 있기 때문에 확장이 불가능하다.
③ 소프트웨어 아키텍처(Architecture)와 동일한 개념이다.
④ 모듈화(Modularity)가 불가능하다.


189. 스택(Stack)에 대한 옳은 내용으로만 나열된 것은?
㉠ FIFO 방식으로 처리된다.
㉡ 순서 리스트의 뒤(Rear)에서 노드가 삽입되며, 앞(Front)에서 노드가 제거된다.
㉢ 선형 리스트의 양쪽 끝에서 삽입과 삭제가 모두 가능한 자료 구조이다.
㉣ 인터럽트 처리, 서브루틴 호출 작업 등에 응용된다.
① ㉠, ㉡
② ㉡, ㉢
③ ㉣
④ ㉠, ㉡, ㉢, ㉣

190. 사용자 수준에서 지원되는 스레드(thread)가 커널에서 지원되는 스레드에 비해 가지는 장점으로 옳은
것은?
① 한 프로세스가 운영체제를 호출할 때 전체 프로세스가 대기할 필요가 없으므로 시스템 성능을 높일 수
있다.
② 동시에 여러 스레드가 커널에 접근할 수 있으므로 여러 스레드가 시스템 호출을 동시에 사용할 수 있다.
③ 각 스레드를 개별적으로 관리할 수 있으므로 스레드의 독립적인 스케줄링이 가능하다.
④ 커널 모드로의 전환 없이 스레드 교환이 가능하므로 오버헤드가 줄어든다.

191. 유스케이스(Usecase)에 대한 설명 중 옳은 것은?
① 유스케이스 다이어그램은 개발자의 요구를 추출하고 분석하기 위해 주로 사용한다.
② 액터는 대상 시스템과 상호 작용하는 사람이나 다른 시스템에 의한 역할이다.
③ 사용자 액터는 본 시스템과 데이터를 주고받는 연동 시스템을 의미한다.
④ 연동의 개념은 일방적으로 데이터를 파일이나 정해진 형식으로 넘겨주는 것을 의미한다.

193. 무결성 제약 조건 중 개체 무결성 제약 조건에 대한 설명으로 옳은 것은?
① 릴레이션 내의 튜플들이 각 속성의 도메인에 정해진 값만을 가져야 한다.
② 기본키는 NULL 값을 가져서는 안되며 릴레이션 내에 오직 하나의 값만 존재해야 한다.
③ 자식 릴레이션의 외래키는 부모 릴레이션의 기본키와 도메인이 동일해야 한다.
④ 자식 릴레이션의 값이 변경될 때 부모 릴레이션의 제약을 받는다.

194. 프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명에 해당하는 것은?
① 각 작업들이 언제 시작하고 언제 종료되는지에 대한 일정을 막대 도표를 이용하여 표시한다.
② 시간선(Time-Line) 차트라고도 한다.
③ 수평 막대의 길이는 각 작업의 기간을 나타낸다.
④ 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다.

195. 요구사항 분석에서 비기능적(Nonfunctional) 요구에 대한 설명으로 옳은 것은?
① 시스템의 처리량(Throughput), 반응 시간 등의 성능 요구나 품질 요구는 비기능적 요구에 해당하지
않는다.
② ‘차량 대여 시스템이 제공하는 모든 화면이 3초 이내에 사용자에게 보여야 한다’는 비기능적 요구이다.
③ 시스템 구축과 관련된 안전, 보안에 대한 요구사항들은 비기능적 요구에 해당하지 않는다.
④ ‘금융 시스템은 조회, 인출, 입금, 송금의 기능이 있어야 한다’는 비기능적 요구이다.

197. 관계 데이터 모델에서 릴레이션(relation)에 관한 설명으로 옳은 것은?
① 릴레이션의 각 행을 스키마(Schema)라 하며, 예로 도서 릴레이션을 구성하는 스키마에는 도서번호, 도
서명, 저자, 가격 등이 있다.
② 릴레이션의 각 열을 튜플(Tuple)이라 하며, 하나의 튜플은 각 속성에서 정의된 값을 이용하여 구성된다.
③ 도메인(Domain)은 하나의 속성이 가질 수 있는 같은 타입의 모든 값의 집합으로 각 속성의 도메인은
원자값을 갖는다.
④ 속성(Attribute)은 한 개의 릴레이션의 논리적인 구조를 정의한 것으로 릴레이션의 이름과 릴레이션에
포함된 속성들의 집합을 의미한다.
